openapi: 3.0.2
paths:
  /v1/ping:
    get:
      description: Simple health check endpoint to verify the API is running. Requires authentication.
      summary: Health check endpoint
      tags: []
      parameters: []
      operationId: getPing
      responses:
        '200':
          description: Successful ping response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Response message indicating service status
                required:
                  - message
                description: Successful ping response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.ping.check();

            console.log(response.message);
  /v1/sites/{siteId}/analytics:
    get:
      description: >-
        Retrieves comprehensive analytics data including views, clicks, traffic sources, geographic data, and
        store metrics for the specified site
      summary: Get site analytics
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to get analytics for
        - name: period
          in: query
          description: Time period for analytics data
          schema:
            default: 30d
            type: string
            enum:
              - 7d
              - 30d
              - 90d
              - 1y
              - all
        - name: includeStore
          in: query
          description: Include store analytics data
          schema:
            default: false
            type: boolean
            nullable: true
      operationId: getSiteAnalytics
      responses:
        '200':
          description: Comprehensive analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalViews:
                    type: number
                    description: Total number of page views
                  totalClicks:
                    type: number
                    description: Total number of click events
                  activities:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          description: Date in YYYY-MM-DD format
                        views:
                          type: number
                          description: Number of views on this date
                        clicks:
                          type: number
                          description: Number of clicks on this date
                      required:
                        - date
                        - views
                        - clicks
                      description: Daily activity data
                    description: Daily activity breakdown
                  referrers:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          description: Category label
                        value:
                          type: number
                          description: Category value/count
                        percentage:
                          type: number
                          description: Percentage of total
                      required:
                        - label
                        - value
                        - percentage
                      description: Donut chart data point
                    description: Traffic sources breakdown
                  devices:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          description: Category label
                        value:
                          type: number
                          description: Category value/count
                        percentage:
                          type: number
                          description: Percentage of total
                      required:
                        - label
                        - value
                        - percentage
                      description: Donut chart data point
                    description: Device type breakdown
                  browsers:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          description: Category label
                        value:
                          type: number
                          description: Category value/count
                        percentage:
                          type: number
                          description: Percentage of total
                      required:
                        - label
                        - value
                        - percentage
                      description: Donut chart data point
                    description: Browser usage breakdown
                  cities:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          description: Category label
                        value:
                          type: number
                          description: Category value/count
                        percentage:
                          type: number
                          description: Percentage of total
                      required:
                        - label
                        - value
                        - percentage
                      description: Donut chart data point
                    description: Geographic breakdown by city
                  countries:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          description: Category label
                        value:
                          type: number
                          description: Category value/count
                        percentage:
                          type: number
                          description: Percentage of total
                      required:
                        - label
                        - value
                        - percentage
                      description: Donut chart data point
                    description: Geographic breakdown by country
                  blocks:
                    type: array
                    items:
                      type: object
                      properties:
                        blockId:
                          type: string
                          description: Block identifier
                        blockType:
                          type: string
                          description: Type of block
                        interactions:
                          type: number
                          description: Number of interactions
                      required:
                        - blockId
                        - blockType
                        - interactions
                      description: Block interaction analytics
                    description: Block interaction analytics
                  store:
                    type: object
                    properties:
                      summary:
                        type: object
                        properties:
                          orders:
                            type: object
                            properties:
                              totalRevenue:
                                type: number
                                description: Total revenue in cents
                              totalCount:
                                type: number
                                description: Total number of transactions
                              fees:
                                type: number
                                description: Total fees in cents
                              taxes:
                                type: number
                                description: Total taxes in cents
                              currency:
                                type: string
                                description: Currency code
                            required:
                              - totalRevenue
                              - totalCount
                              - fees
                              - taxes
                              - currency
                            description: Orders summary
                          bookings:
                            type: object
                            properties:
                              totalRevenue:
                                type: number
                                description: Total revenue in cents
                              totalCount:
                                type: number
                                description: Total number of transactions
                              fees:
                                type: number
                                description: Total fees in cents
                              taxes:
                                type: number
                                description: Total taxes in cents
                              currency:
                                type: string
                                description: Currency code
                            required:
                              - totalRevenue
                              - totalCount
                              - fees
                              - taxes
                              - currency
                            description: Bookings summary
                          invoices:
                            type: object
                            properties:
                              totalRevenue:
                                type: number
                                description: Total revenue in cents
                              totalCount:
                                type: number
                                description: Total number of transactions
                              fees:
                                type: number
                                description: Total fees in cents
                              taxes:
                                type: number
                                description: Total taxes in cents
                              currency:
                                type: string
                                description: Currency code
                            required:
                              - totalRevenue
                              - totalCount
                              - fees
                              - taxes
                              - currency
                            description: Invoices summary
                          tips:
                            type: object
                            properties:
                              totalRevenue:
                                type: number
                                description: Total revenue in cents
                              totalCount:
                                type: number
                                description: Total number of transactions
                              fees:
                                type: number
                                description: Total fees in cents
                              taxes:
                                type: number
                                description: Total taxes in cents
                              currency:
                                type: string
                                description: Currency code
                            required:
                              - totalRevenue
                              - totalCount
                              - fees
                              - taxes
                              - currency
                            description: Tips summary
                          totalSales:
                            type: object
                            properties:
                              totalRevenue:
                                type: number
                                description: Total revenue in cents
                              totalCount:
                                type: number
                                description: Total number of transactions
                              fees:
                                type: number
                                description: Total fees in cents
                              taxes:
                                type: number
                                description: Total taxes in cents
                              currency:
                                type: string
                                description: Currency code
                            required:
                              - totalRevenue
                              - totalCount
                              - fees
                              - taxes
                              - currency
                            description: Combined sales summary
                        required:
                          - orders
                          - bookings
                          - invoices
                          - tips
                          - totalSales
                        description: Store sales summary
                      stats:
                        type: object
                        properties:
                          totalOrders:
                            type: number
                            description: Total number of orders
                          totalProducts:
                            type: number
                            description: Total number of products
                          totalCoupons:
                            type: number
                            description: Total number of coupons
                          totalQuotes:
                            type: number
                            description: Total number of quotes
                          totalInvoices:
                            type: number
                            description: Total number of invoices
                        required:
                          - totalOrders
                          - totalProducts
                          - totalCoupons
                          - totalQuotes
                          - totalInvoices
                        description: Store statistics
                      bestSellers:
                        type: array
                        items:
                          type: object
                          properties:
                            productId:
                              type: string
                              description: Product ID
                            productName:
                              type: string
                              description: Product name
                            revenue:
                              type: number
                              description: Revenue in cents
                            unitsSold:
                              type: number
                              description: Number of units sold
                          required:
                            - productId
                            - productName
                            - revenue
                            - unitsSold
                          description: Best selling product data
                        description: Best selling products
                      hasActiveConnection:
                        type: boolean
                        description: Whether payment processing is connected
                        nullable: true
                      hasSalesHistory:
                        type: boolean
                        description: Whether the store has sales history
                        nullable: true
                    required:
                      - summary
                      - stats
                      - bestSellers
                    description: Store analytics data
                required:
                  - totalViews
                  - totalClicks
                  - activities
                  - referrers
                  - devices
                  - browsers
                  - cities
                  - countries
                description: Comprehensive analytics data
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.sites.retrieveAnalytics('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(response.activities);
  /v1/pages/{pageId}/blocks:
    get:
      description: Retrieves all blocks associated with the specified page ID
      summary: List blocks
      tags: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the page to retrieve blocks for
      operationId: getBlocks
      responses:
        '200':
          description: Successful response containing page blocks
          content:
            application/json:
              schema:
                type: object
                properties:
                  blocks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the block
                        pageId:
                          type: string
                          format: uuid
                          description: ID of the page this block belongs to
                        name:
                          type: string
                          description: Name of the block
                        content:
                          nullable: true
                          description: Content of the block, can be null
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the block was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the block was last updated
                        kind:
                          type: string
                          description: Type or category of the block, can be null
                          nullable: true
                        isComponent:
                          default: false
                          type: boolean
                          description: Whether this block is a component
                        componentBlockId:
                          type: string
                          format: uuid
                          description: ID of the component block if this is an instance, can be null
                          nullable: true
                      required:
                        - id
                        - pageId
                        - name
                        - createdAt
                        - updatedAt
                        - kind
                        - componentBlockId
                    description: Array of blocks associated with the page
                required:
                  - blocks
                description: Successful response containing page blocks
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const blocks = await client.pages.blocks.list('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(blocks.blocks);
    post:
      description: Creates a new block within the specified page. Returns the created block or validation errors.
      summary: Create block
      tags: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the page to create a block in
      operationId: createBlock
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the block
                content:
                  nullable: true
                  description: Content of the block, can be null
                kind:
                  type: string
                  description: Type or category of the block, can be null
                  nullable: true
                isComponent:
                  default: false
                  type: boolean
                  description: Whether this block is a component
                componentBlockId:
                  type: string
                  format: uuid
                  description: ID of the component block if this is an instance, can be null
                  nullable: true
              required:
                - name
                - kind
                - componentBlockId
              description: Block data to create
      responses:
        '201':
          description: Successful block creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  block:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the block
                      pageId:
                        type: string
                        format: uuid
                        description: ID of the page this block belongs to
                      name:
                        type: string
                        description: Name of the block
                      content:
                        nullable: true
                        description: Content of the block, can be null
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the block was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the block was last updated
                      kind:
                        type: string
                        description: Type or category of the block, can be null
                        nullable: true
                      isComponent:
                        default: false
                        type: boolean
                        description: Whether this block is a component
                      componentBlockId:
                        type: string
                        format: uuid
                        description: ID of the component block if this is an instance, can be null
                        nullable: true
                    required:
                      - id
                      - pageId
                      - name
                      - createdAt
                      - updatedAt
                      - kind
                      - componentBlockId
                    description: The newly created block
                required:
                  - block
                description: Successful block creation response
        '400':
          description: Validation error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Validation error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const block = await client.pages.blocks.create('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              componentBlockId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
              kind: 'kind',
              name: 'name',
            });

            console.log(block.block);
  /v1/blocks/{blockId}:
    get:
      description: Retrieves a specific block by its ID. Returns 404 if the block is not found.
      summary: Get block
      tags: []
      parameters:
        - name: blockId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the block to retrieve
      operationId: getBlock
      responses:
        '200':
          description: Successful block retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  block:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the block
                      pageId:
                        type: string
                        format: uuid
                        description: ID of the page this block belongs to
                      name:
                        type: string
                        description: Name of the block
                      content:
                        nullable: true
                        description: Content of the block, can be null
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the block was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the block was last updated
                      kind:
                        type: string
                        description: Type or category of the block, can be null
                        nullable: true
                      isComponent:
                        default: false
                        type: boolean
                        description: Whether this block is a component
                      componentBlockId:
                        type: string
                        format: uuid
                        description: ID of the component block if this is an instance, can be null
                        nullable: true
                    required:
                      - id
                      - pageId
                      - name
                      - createdAt
                      - updatedAt
                      - kind
                      - componentBlockId
                    description: The requested block
                required:
                  - block
                description: Successful block retrieval response
        '404':
          description: Block not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Block not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const block = await client.blocks.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(block.block);
    patch:
      description: >-
        Updates an existing block with the provided data. Allows partial updates. Returns 404 if the block is
        not found.
      summary: Update block
      tags: []
      parameters:
        - name: blockId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the block to update
      operationId: updateBlock
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the block
                content:
                  nullable: true
                  description: Content of the block, can be null
                kind:
                  type: string
                  description: Type or category of the block, can be null
                  nullable: true
                isComponent:
                  default: false
                  type: boolean
                  description: Whether this block is a component
                componentBlockId:
                  type: string
                  format: uuid
                  description: ID of the component block if this is an instance, can be null
                  nullable: true
              description: Block fields to update
      responses:
        '200':
          description: Successful block update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  block:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the block
                      pageId:
                        type: string
                        format: uuid
                        description: ID of the page this block belongs to
                      name:
                        type: string
                        description: Name of the block
                      content:
                        nullable: true
                        description: Content of the block, can be null
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the block was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the block was last updated
                      kind:
                        type: string
                        description: Type or category of the block, can be null
                        nullable: true
                      isComponent:
                        default: false
                        type: boolean
                        description: Whether this block is a component
                      componentBlockId:
                        type: string
                        format: uuid
                        description: ID of the component block if this is an instance, can be null
                        nullable: true
                    required:
                      - id
                      - pageId
                      - name
                      - createdAt
                      - updatedAt
                      - kind
                      - componentBlockId
                    description: The updated block
                required:
                  - block
                description: Successful block update response
        '404':
          description: Block not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Block not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const block = await client.blocks.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(block.block);
    delete:
      description: Permanently deletes a block. Returns a success status or 404 if the block is not found.
      summary: Delete block
      tags: []
      parameters:
        - name: blockId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the block to delete
      operationId: deleteBlock
      responses:
        '200':
          description: Successful block deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the deletion was successful
                required:
                  - success
                description: Successful block deletion response
        '404':
          description: Block not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Block not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const block = await client.blocks.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(block.success);
  /v1/blog-posts:
    get:
      description: Retrieves a paginated list of published blog posts for a specific site
      summary: List blog posts
      tags: []
      parameters:
        - name: siteId
          in: query
          description: ID of the site to retrieve blog posts for
          required: true
          schema:
            type: string
            format: uuid
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - publishedAt
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getBlogPosts
      responses:
        '200':
          description: Successful blog posts listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the blog post
                        slug:
                          type: string
                          description: URL-friendly identifier for the blog post
                        title:
                          type: string
                          description: Title of the blog post
                        excerpt:
                          type: string
                          description: Excerpt of the blog post content
                          nullable: true
                        html:
                          type: string
                          description: Rendered HTML content
                          nullable: true
                        featureImage:
                          description: Feature image for the blog post
                          nullable: true
                        featureImageCaption:
                          type: string
                          description: Caption for the feature image
                          nullable: true
                        isFeatured:
                          type: boolean
                          description: Whether this post is featured
                        metaTitle:
                          type: string
                          description: SEO meta title
                          nullable: true
                        metaDescription:
                          type: string
                          description: SEO meta description
                          nullable: true
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the post was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the post was last updated
                        publishedAt:
                          type: string
                          format: date-time
                          description: Date and time when the post was published
                          nullable: true
                        status:
                          type: string
                          enum:
                            - PUBLIC
                            - DRAFT
                            - UNLISTED
                          description: Publication status of the post
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site this post belongs to
                      required:
                        - id
                        - slug
                        - title
                        - excerpt
                        - html
                        - featureImageCaption
                        - isFeatured
                        - metaTitle
                        - metaDescription
                        - createdAt
                        - updatedAt
                        - publishedAt
                        - status
                        - siteId
                      description: Schema for a blog post
                    description: Array of blog posts in the current page
                  total:
                    type: number
                    description: Total number of published blog posts
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful blog posts listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const blogPostListResponse of client.blogPosts.list({
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            })) {
              console.log(blogPostListResponse.id);
            }
  /v1/blog-posts/{blogPostId}:
    get:
      description: Retrieves a specific published blog post by ID
      summary: Get blog post
      tags: []
      parameters:
        - name: blogPostId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the blog post to retrieve
      operationId: getBlogPost
      responses:
        '200':
          description: Successful blog post retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the blog post
                      slug:
                        type: string
                        description: URL-friendly identifier for the blog post
                      title:
                        type: string
                        description: Title of the blog post
                      excerpt:
                        type: string
                        description: Excerpt of the blog post content
                        nullable: true
                      html:
                        type: string
                        description: Rendered HTML content
                        nullable: true
                      featureImage:
                        description: Feature image for the blog post
                        nullable: true
                      featureImageCaption:
                        type: string
                        description: Caption for the feature image
                        nullable: true
                      isFeatured:
                        type: boolean
                        description: Whether this post is featured
                      metaTitle:
                        type: string
                        description: SEO meta title
                        nullable: true
                      metaDescription:
                        type: string
                        description: SEO meta description
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the post was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the post was last updated
                      publishedAt:
                        type: string
                        format: date-time
                        description: Date and time when the post was published
                        nullable: true
                      status:
                        type: string
                        enum:
                          - PUBLIC
                          - DRAFT
                          - UNLISTED
                        description: Publication status of the post
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this post belongs to
                    required:
                      - id
                      - slug
                      - title
                      - excerpt
                      - html
                      - featureImageCaption
                      - isFeatured
                      - metaTitle
                      - metaDescription
                      - createdAt
                      - updatedAt
                      - publishedAt
                      - status
                      - siteId
                    description: The requested blog post
                required:
                  - post
                description: Successful blog post retrieval response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Blog post not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Blog post not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const blogPost = await client.blogPosts.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(blogPost.post);
  /v1/bookings:
    get:
      description: Retrieves a paginated list of bookings for a site with optional status filtering
      summary: List bookings
      tags: []
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: status
          in: query
          description: Filter by booking status
          schema:
            type: string
            enum:
              - CANCELLED
              - ACCEPTED
              - REJECTED
              - PENDING
              - COMPLETED
              - NO_SHOW
              - REFUNDED
              - PENDING_CONFIRMATION
        - name: siteId
          in: query
          description: Site ID to fetch bookings for
          required: true
          schema:
            type: string
            format: uuid
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getBookings
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    description: Total number of bookings matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the booking
                        userId:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: ID of the user who created the booking, can be null
                          nullable: true
                        siteId:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: ID of the site where the booking was made, can be null
                          nullable: true
                        eventTypeId:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: ID of the event type for this booking, can be null
                          nullable: true
                        response:
                          oneOf:
                            - nullable: true
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Custom response data associated with the booking, can be null
                          nullable: true
                        startTime:
                          type: string
                          format: date-time
                          description: Start date and time of the booking
                        endTime:
                          type: string
                          format: date-time
                          description: End date and time of the booking
                        attendees:
                          description: List of attendees for the booking
                          nullable: true
                        location:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Location where the booking will take place, can be null
                          nullable: true
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the booking was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the booking was last updated
                        status:
                          type: string
                          enum:
                            - CANCELLED
                            - ACCEPTED
                            - REJECTED
                            - PENDING
                            - COMPLETED
                            - NO_SHOW
                            - REFUNDED
                            - PENDING_CONFIRMATION
                          description: Current status of the booking
                        destinationCalendarId:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: ID of the destination calendar for this booking, can be null
                          nullable: true
                        cancellationReason:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Reason for cancellation if the booking was cancelled, can be null
                          nullable: true
                        rejectionReason:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Reason for rejection if the booking was rejected, can be null
                          nullable: true
                        rescheduledReason:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Reason for rescheduling if the booking was rescheduled, can be null
                          nullable: true
                        rescheduled:
                          oneOf:
                            - type: boolean
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Indicates if the booking has been rescheduled, can be null
                          nullable: true
                        fromReschedule:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: ID of the original booking if this is a rescheduled booking, can be null
                          nullable: true
                        recurringEventId:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: ID of the recurring event this booking belongs to, can be null
                          nullable: true
                        smsReminderNumber:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Phone number for SMS reminders, can be null
                          nullable: true
                        metadata:
                          oneOf:
                            - nullable: true
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Additional metadata for the booking, can be null
                          nullable: true
                        calendarEvent:
                          oneOf:
                            - nullable: true
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Calendar event data associated with the booking, can be null
                          nullable: true
                        isRecorded:
                          type: boolean
                          description: Indicates if the booking event will be recorded
                        title:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Title of the booking, can be null
                          nullable: true
                        description:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Description of the booking, can be null
                          nullable: true
                        source:
                          oneOf:
                            - type: string
                            - type: string
                              format: 'null'
                              nullable: true
                          description: Source of the booking (e.g., website, app), can be null
                          nullable: true
                      required:
                        - id
                        - userId
                        - siteId
                        - eventTypeId
                        - startTime
                        - endTime
                        - location
                        - createdAt
                        - updatedAt
                        - status
                        - destinationCalendarId
                        - cancellationReason
                        - rejectionReason
                        - rescheduledReason
                        - rescheduled
                        - fromReschedule
                        - recurringEventId
                        - smsReminderNumber
                        - isRecorded
                        - title
                        - description
                        - source
                    description: List of booking items in the current page
                required:
                  - total
                  - pageInfo
                  - items
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const bookingListResponse of client.bookings.list({
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            })) {
              console.log(bookingListResponse.id);
            }
  /v1/bookings/sample:
    get:
      description: Retrieves a sample of bookings with basic information
      summary: List sample bookings
      tags: []
      parameters: []
      operationId: getBookingsSample
      responses:
        '200':
          description: Array of simplified bookings with basic information
          content:
            application/json:
              schema:
                description: Array of simplified bookings with basic information
                nullable: true
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.bookings.listSample();

            console.log(response);
  /v1/bookings/{bookingId}/accept:
    post:
      description: Accepts a pending booking request and confirms the booking
      summary: Accept booking request
      tags: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Booking ID to accept
      operationId: acceptBookingRequest
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteId:
                  type: string
                  format: uuid
                  description: Site ID for permission validation
              required:
                - siteId
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful
                required:
                  - success
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Booking not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Booking not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.bookings.accept('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            });

            console.log(response.success);
  /v1/bookings/{bookingId}/decline:
    post:
      description: Declines a pending booking request
      summary: Decline booking request
      tags: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Booking ID to decline
      operationId: declineBookingRequest
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteId:
                  type: string
                  format: uuid
                  description: Site ID for permission validation
                cancellationReason:
                  type: string
                  description: Reason for declining the booking
              required:
                - siteId
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful
                required:
                  - success
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Booking not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Booking not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.bookings.decline('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            });

            console.log(response.success);
  /v1/bookings/{bookingId}/complete:
    post:
      description: Marks a booking as completed or no-show
      summary: Complete booking
      tags: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Booking ID to complete
      operationId: completeBooking
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteId:
                  type: string
                  format: uuid
                  description: Site ID for permission validation
                noShow:
                  default: false
                  type: boolean
                  description: Whether the booking was a no-show
                chargeAmountInCents:
                  type: number
                  description: Amount to charge in cents
              required:
                - siteId
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful
                required:
                  - success
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Booking not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Booking not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.bookings.complete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            });

            console.log(response.success);
  /v1/bookings/{bookingId}/reschedule:
    post:
      description: Changes the start and end time of an existing booking
      summary: Reschedule booking
      tags: []
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Booking ID to reschedule
      operationId: rescheduleBooking
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                startTime:
                  type: string
                  format: date-time
                  description: New start time for the booking
                endTime:
                  type: string
                  format: date-time
                  description: New end time for the booking
              required:
                - startTime
                - endTime
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the operation was successful
                required:
                  - success
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Booking not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Booking not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.bookings.reschedule('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              endTime: '2019-12-27T18:11:19.117Z',
              startTime: '2019-12-27T18:11:19.117Z',
            });

            console.log(response.success);
  /v1/event-types:
    get:
      description: Retrieves a paginated list of published event types for a specific site
      summary: List event types
      tags: []
      parameters:
        - name: siteId
          in: query
          description: ID of the site to retrieve event types for
          required: true
          schema:
            type: string
            format: uuid
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - position
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getEventTypes
      responses:
        '200':
          description: Successful event types listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the event type
                        name:
                          type: string
                          description: Name of the event type
                        slug:
                          type: string
                          description: URL-friendly identifier for the event type
                        description:
                          type: string
                          description: Description of the event type
                          nullable: true
                        length:
                          type: number
                          description: Duration of the event in minutes
                        priceInCents:
                          type: number
                          description: Price in cents
                        currency:
                          type: string
                          description: Currency code
                        locations:
                          type: array
                          items:
                            nullable: true
                          description: Available locations for the event
                          nullable: true
                        attendanceType:
                          type: string
                          enum:
                            - MEETING
                            - GROUP
                            - EVENT
                          description: Type of attendance
                        maxAttendees:
                          type: number
                          description: Maximum number of attendees
                          nullable: true
                        requiresConfirmation:
                          type: boolean
                          description: Whether booking requires confirmation
                        hidden:
                          type: boolean
                          description: Whether the event type is hidden
                        media:
                          description: Event type media
                          nullable: true
                        color:
                          type: string
                          description: Event type color
                          nullable: true
                        metadata:
                          nullable: true
                          description: Additional metadata
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the event type was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the event type was last updated
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site this event type belongs to
                      required:
                        - id
                        - name
                        - slug
                        - description
                        - length
                        - priceInCents
                        - currency
                        - locations
                        - attendanceType
                        - maxAttendees
                        - requiresConfirmation
                        - hidden
                        - color
                        - createdAt
                        - updatedAt
                        - siteId
                      description: Schema for an event type
                    description: Array of event types in the current page
                  total:
                    type: number
                    description: Total number of published event types
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful event types listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const eventTypeListResponse of client.eventTypes.list({
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            })) {
              console.log(eventTypeListResponse.id);
            }
  /v1/event-types/{eventTypeId}:
    get:
      description: Retrieves a specific published event type by ID
      summary: Get event type
      tags: []
      parameters:
        - name: eventTypeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the event type to retrieve
      operationId: getEventType
      responses:
        '200':
          description: Successful event type retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  eventType:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the event type
                      name:
                        type: string
                        description: Name of the event type
                      slug:
                        type: string
                        description: URL-friendly identifier for the event type
                      description:
                        type: string
                        description: Description of the event type
                        nullable: true
                      length:
                        type: number
                        description: Duration of the event in minutes
                      priceInCents:
                        type: number
                        description: Price in cents
                      currency:
                        type: string
                        description: Currency code
                      locations:
                        type: array
                        items:
                          nullable: true
                        description: Available locations for the event
                        nullable: true
                      attendanceType:
                        type: string
                        enum:
                          - MEETING
                          - GROUP
                          - EVENT
                        description: Type of attendance
                      maxAttendees:
                        type: number
                        description: Maximum number of attendees
                        nullable: true
                      requiresConfirmation:
                        type: boolean
                        description: Whether booking requires confirmation
                      hidden:
                        type: boolean
                        description: Whether the event type is hidden
                      media:
                        description: Event type media
                        nullable: true
                      color:
                        type: string
                        description: Event type color
                        nullable: true
                      metadata:
                        nullable: true
                        description: Additional metadata
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the event type was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the event type was last updated
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this event type belongs to
                    required:
                      - id
                      - name
                      - slug
                      - description
                      - length
                      - priceInCents
                      - currency
                      - locations
                      - attendanceType
                      - maxAttendees
                      - requiresConfirmation
                      - hidden
                      - color
                      - createdAt
                      - updatedAt
                      - siteId
                    description: The requested event type
                required:
                  - eventType
                description: Successful event type retrieval response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Event type not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Event type not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const eventType = await client.eventTypes.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(eventType.eventType);
  /v1/form-responses:
    get:
      description: Retrieves form responses for a specific form template and site.
      summary: List form responses
      tags: []
      parameters:
        - name: form_template_id
          in: query
          description: ID of the form template to retrieve responses for
          required: true
          schema:
            type: string
        - name: site_id
          in: query
          description: ID of the site to retrieve responses for
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getFormResponses
      responses:
        '200':
          description: Successful form responses listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      nullable: true
                    description: Array of form responses in the current page
                  total:
                    type: number
                    description: Total number of form responses
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful form responses listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const formResponseListResponse of client.formResponses.list({
              form_template_id: 'form_template_id',
              site_id: 'site_id',
            })) {
              console.log(formResponseListResponse);
            }
  /v1/form-responses/sample:
    get:
      description: Retrieves a sample of form responses for a specific form template.
      summary: List sample form responses
      tags: []
      parameters:
        - name: form_template_slug
          in: query
          description: Slug of the form template to retrieve responses for
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getFormResponsesSample
      responses:
        '200':
          description: Successful form responses listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      nullable: true
                    description: Array of form responses in the current page
                  total:
                    type: number
                    description: Total number of form responses
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful form responses listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const formResponseListSampleResponse of client.formResponses.listSample({
              form_template_slug: 'form_template_slug',
            })) {
              console.log(formResponseListSampleResponse);
            }
  /v1/form-templates:
    get:
      description: Retrieves a paginated list of form templates for a specific site
      summary: List form templates
      tags: []
      parameters:
        - name: siteId
          in: query
          description: ID of the site to retrieve form templates for
          required: true
          schema:
            type: string
            format: uuid
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: search
          in: query
          description: Search query for form template titles
          schema:
            type: string
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - title
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getFormTemplates
      responses:
        '200':
          description: Successful form templates listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the form template
                        slug:
                          type: string
                          description: URL-friendly identifier for the form template
                        title:
                          type: string
                          description: Title of the form template
                          nullable: true
                        description:
                          type: string
                          description: Description of the form template
                          nullable: true
                        thankYouMessage:
                          type: string
                          description: Thank you message after submission
                          nullable: true
                        buttonText:
                          type: string
                          description: Submit button text
                          nullable: true
                        formThemeId:
                          type: string
                          format: uuid
                          description: ID of the form theme
                          nullable: true
                        bannerMedia:
                          nullable: true
                          description: Banner media for the form
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site this form belongs to
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the form was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the form was last updated
                        status:
                          type: string
                          enum:
                            - ENABLED
                            - PLACEHOLDER
                          description: Status of the form template
                        customRecipients:
                          type: array
                          items:
                            type: string
                            format: email
                          description: Custom email recipients
                        useCustomRecipients:
                          type: boolean
                          description: Whether to use custom recipients
                        responseCount:
                          type: number
                          description: Number of responses received
                      required:
                        - id
                        - slug
                        - title
                        - description
                        - thankYouMessage
                        - buttonText
                        - formThemeId
                        - siteId
                        - createdAt
                        - updatedAt
                        - status
                        - customRecipients
                        - useCustomRecipients
                      description: Schema for a form template
                    description: Array of form templates in the current page
                  total:
                    type: number
                    description: Total number of form templates
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful form templates listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const formTemplateListResponse of client.formTemplates.list({
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            })) {
              console.log(formTemplateListResponse.id);
            }
  /v1/form-templates/{formTemplateId}:
    get:
      description: Retrieves a specific form template with its fields and theme
      summary: Get form template
      tags: []
      parameters:
        - name: formTemplateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the form template to retrieve
        - name: siteId
          in: query
          description: ID of the site that owns the form template
          required: true
          schema:
            type: string
            format: uuid
      operationId: getFormTemplate
      responses:
        '200':
          description: Successful form template retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  formTemplate:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the form template
                      slug:
                        type: string
                        description: URL-friendly identifier for the form template
                      title:
                        type: string
                        description: Title of the form template
                        nullable: true
                      description:
                        type: string
                        description: Description of the form template
                        nullable: true
                      thankYouMessage:
                        type: string
                        description: Thank you message after submission
                        nullable: true
                      buttonText:
                        type: string
                        description: Submit button text
                        nullable: true
                      formThemeId:
                        type: string
                        format: uuid
                        description: ID of the form theme
                        nullable: true
                      bannerMedia:
                        nullable: true
                        description: Banner media for the form
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this form belongs to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the form was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the form was last updated
                      status:
                        type: string
                        enum:
                          - ENABLED
                          - PLACEHOLDER
                        description: Status of the form template
                      customRecipients:
                        type: array
                        items:
                          type: string
                          format: email
                        description: Custom email recipients
                      useCustomRecipients:
                        type: boolean
                        description: Whether to use custom recipients
                      responseCount:
                        type: number
                        description: Number of responses received
                      formFields:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Form field ID
                            position:
                              type: number
                              description: Field position in the form
                            content:
                              description: Field configuration and properties
                              nullable: true
                          required:
                            - id
                            - position
                          description: Form field definition
                        description: Form fields
                      formTheme:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Form theme ID
                          name:
                            type: string
                            description: Theme name
                          config:
                            description: Theme configuration
                            nullable: true
                        required:
                          - id
                          - name
                        description: Form theme
                        nullable: true
                    required:
                      - id
                      - slug
                      - title
                      - description
                      - thankYouMessage
                      - buttonText
                      - formThemeId
                      - siteId
                      - createdAt
                      - updatedAt
                      - status
                      - customRecipients
                      - useCustomRecipients
                      - formFields
                      - formTheme
                    description: The requested form template
                required:
                  - formTemplate
                description: Successful form template retrieval response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Form template not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Form template not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const formTemplate = await client.formTemplates.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            });

            console.log(formTemplate.formTemplate);
  /v1/invoices:
    get:
      description: Retrieves a paginated list of invoices for sites the user has access to
      summary: List invoices
      tags: []
      parameters:
        - name: siteId
          in: query
          description: ID of the site to retrieve invoices for
          required: true
          schema:
            type: string
            format: uuid
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - dueAt
              - invoiceNumber
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: status
          in: query
          description: Filter by invoice status
          schema:
            type: string
            enum:
              - DRAFT
              - PENDING
              - PAID
              - VOID
              - OVERDUE
              - REFUNDED
      operationId: getInvoices
      responses:
        '200':
          description: Successful invoices listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the invoice
                        invoiceNumber:
                          type: number
                          description: Sequential invoice number
                        status:
                          type: string
                          enum:
                            - DRAFT
                            - PENDING
                            - PAID
                            - VOID
                            - OVERDUE
                            - REFUNDED
                          description: Current status of the invoice
                        currency:
                          type: string
                          description: Currency code for the invoice
                        totalInCents:
                          type: number
                          description: Total amount in cents
                        amountPaidInCents:
                          type: number
                          description: Amount paid in cents
                        amountRemainingInCents:
                          type: number
                          description: Amount remaining in cents
                        dueAt:
                          type: string
                          format: date-time
                          description: Due date for the invoice
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the invoice was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the invoice was last updated
                        completedAt:
                          type: string
                          format: date-time
                          description: Date and time when the invoice was completed
                          nullable: true
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site this invoice belongs to
                        memo:
                          type: string
                          description: Optional memo for the invoice
                          nullable: true
                        footer:
                          type: string
                          description: Optional footer for the invoice
                          nullable: true
                      required:
                        - id
                        - invoiceNumber
                        - status
                        - currency
                        - totalInCents
                        - amountPaidInCents
                        - amountRemainingInCents
                        - dueAt
                        - createdAt
                        - updatedAt
                        - completedAt
                        - siteId
                        - memo
                        - footer
                      description: Schema for an invoice
                    description: Array of invoices in the current page
                  total:
                    type: number
                    description: Total number of invoices
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful invoices listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const invoiceListResponse of client.invoices.list({
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            })) {
              console.log(invoiceListResponse.id);
            }
    post:
      description: Creates a new store invoice
      summary: Create store invoice
      tags: []
      parameters: []
      operationId: createStoreInvoice
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteId:
                  type: string
                  format: uuid
                  description: Site ID
                siteContactId:
                  type: string
                  format: uuid
                  description: Site contact ID
                status:
                  type: string
                  enum:
                    - DRAFT
                    - PENDING
                    - PAID
                    - VOID
                    - OVERDUE
                    - REFUNDED
                  description: Invoice status
                currency:
                  type: string
                  description: Currency code
                dueAt:
                  type: string
                  description: Due date (ISO string)
                businessName:
                  type: string
                  description: Business name
                footer:
                  type: string
                  description: Footer text
                memo:
                  type: string
                  description: Memo
                paymentReference:
                  type: string
                  description: Payment reference
                passThroughPaymentFee:
                  type: boolean
                  description: Pass through payment fee
                invoiceDiscounts:
                  default: []
                  type: array
                  items:
                    type: object
                    properties:
                      discountId:
                        type: string
                        format: uuid
                      valueType:
                        type: string
                        enum:
                          - FIXED
                          - PERCENT
                        description: Discount value type
                      valueFixedInCents:
                        type: number
                        description: Fixed discount in cents
                      valuePercent:
                        type: number
                        description: Percentage discount
                      lineNumber:
                        type: number
                        description: Line number
                    required:
                      - valueType
                    description: Schema for a store invoice discount
                  description: Invoice discounts
                invoiceItems:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      itemId:
                        type: string
                        description: Store item ID (optional for custom items)
                      unitPriceInCents:
                        type: number
                        description: Unit price in cents
                      description:
                        type: string
                        description: Description of the item
                      quantity:
                        type: number
                        description: Quantity
                      taxRate:
                        type: number
                        description: Tax rate
                      lineNumber:
                        type: number
                        description: Line number
                    required:
                      - unitPriceInCents
                      - description
                      - quantity
                      - taxRate
                    description: Schema for a store invoice item
                  description: Invoice items
              required:
                - siteId
                - siteContactId
                - status
                - invoiceItems
              description: Store invoice creation data
      responses:
        '200':
          description: Successful invoice creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                    format: uuid
                    description: Created invoice ID
                required:
                  - invoiceId
                description: Successful invoice creation response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const invoice = await client.invoices.create({
              invoiceItems: [{ description: 'description', quantity: 0, taxRate: 0, unitPriceInCents: 0 }],
              siteContactId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
              status: 'DRAFT',
            });

            console.log(invoice.invoiceId);
  /v1/invoices/{invoiceId}/send:
    post:
      description: Sends a draft store invoice
      summary: Send store invoice
      tags: []
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice ID
      operationId: sendStoreInvoice
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteSlug:
                  type: string
                  description: Site slug
              required:
                - siteSlug
              description: Send invoice data
      responses:
        '200':
          description: Successful send response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status
                required:
                  - success
                description: Successful send response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const response = await client.invoices.send('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', { siteSlug:
            'siteSlug' });


            console.log(response.success);
  /v1/invoices/{invoiceId}/void:
    post:
      description: Voids a store invoice
      summary: Void store invoice
      tags: []
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice ID
      operationId: voidStoreInvoice
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties: {}
              description: Empty body
      responses:
        '200':
          description: Successful void response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status
                required:
                  - success
                description: Successful void response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.invoices.void('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(response.success);
  /v1/invoices/{invoiceId}/mark-paid:
    post:
      description: Marks a store invoice as paid
      summary: Mark store invoice as paid
      tags: []
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice ID
      operationId: markStoreInvoicePaid
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                completedAt:
                  type: string
                  description: Completion date (ISO string)
              description: Mark paid data
      responses:
        '200':
          description: Successful mark paid response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status
                required:
                  - success
                description: Successful mark paid response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.invoices.markPaid('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(response.success);
  /v1/invoices/{invoiceId}:
    delete:
      description: Deletes a draft store invoice
      summary: Delete draft store invoice
      tags: []
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice ID
      operationId: deleteDraftStoreInvoice
      responses:
        '200':
          description: Successful deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status
                required:
                  - success
                description: Successful deletion response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const invoice = await client.invoices.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(invoice.success);
    put:
      description: Updates a store invoice
      summary: Update store invoice
      tags: []
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice ID
      operationId: updateStoreInvoice
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteContactId:
                  type: string
                  format: uuid
                  description: Site contact ID
                memo:
                  type: string
                  description: Memo
                footer:
                  type: string
                  description: Footer
                notes:
                  type: string
                  description: Notes
                currency:
                  type: string
                  description: Currency
                paymentReference:
                  type: string
                  description: Payment reference
                dueAt:
                  type: string
                  description: Due date (ISO string)
                passThroughPaymentFee:
                  type: boolean
                  description: Pass through payment fee
                invoiceItems:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      itemId:
                        type: string
                        description: Store item ID (optional for custom items)
                      unitPriceInCents:
                        type: number
                        description: Unit price in cents
                      description:
                        type: string
                        description: Description of the item
                      quantity:
                        type: number
                        description: Quantity
                      taxRate:
                        type: number
                        description: Tax rate
                      lineNumber:
                        type: number
                        description: Line number
                    required:
                      - unitPriceInCents
                      - description
                      - quantity
                      - taxRate
                    description: Schema for a store invoice item
                  description: Invoice items
                invoiceDiscounts:
                  default: []
                  type: array
                  items:
                    type: object
                    properties:
                      discountId:
                        type: string
                        format: uuid
                      valueType:
                        type: string
                        enum:
                          - FIXED
                          - PERCENT
                        description: Discount value type
                      valueFixedInCents:
                        type: number
                        description: Fixed discount in cents
                      valuePercent:
                        type: number
                        description: Percentage discount
                      lineNumber:
                        type: number
                        description: Line number
                    required:
                      - valueType
                    description: Schema for a store invoice discount
                  description: Invoice discounts
              required:
                - invoiceItems
              description: Store invoice update data
      responses:
        '200':
          description: Successful update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status
                required:
                  - success
                description: Successful update response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const invoice = await client.invoices.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              invoiceItems: [{ description: 'description', quantity: 0, taxRate: 0, unitPriceInCents: 0 }],
            });

            console.log(invoice.success);
  /v1/invoice-items:
    get:
      description: Retrieves a paginated list of invoice items
      summary: List invoice items
      tags: []
      parameters:
        - name: siteId
          in: query
          description: Site ID
          required: true
          schema:
            type: string
            format: uuid
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: search
          in: query
          description: Search term
          schema:
            type: string
      operationId: getInvoiceItems
      responses:
        '200':
          description: Successful invoice items listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the invoice item
                        title:
                          type: string
                          description: Title of the invoice item
                        description:
                          type: string
                          description: Description of the invoice item
                          nullable: true
                        priceInCents:
                          type: number
                          description: Price in cents
                        currency:
                          type: string
                          description: Currency code
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the item was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the item was last updated
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site this item belongs to
                      required:
                        - id
                        - title
                        - description
                        - priceInCents
                        - currency
                        - createdAt
                        - updatedAt
                        - siteId
                      description: Schema for an invoice item
                    description: Array of invoice items in the current page
                  total:
                    type: number
                    description: Total number of invoice items
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful invoice items listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const invoiceItemListResponse of client.invoiceItems.list({
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            })) {
              console.log(invoiceItemListResponse.id);
            }
    post:
      description: Creates a new invoice item
      summary: Create invoice item
      tags: []
      parameters: []
      operationId: createInvoiceItem
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                siteId:
                  type: string
                  format: uuid
                  description: Site ID
                title:
                  type: string
                  description: Item title
                priceInCents:
                  type: number
                  description: Price in cents
                description:
                  type: string
                  description: Item description
              required:
                - siteId
                - title
                - priceInCents
              description: Invoice item creation data
      responses:
        '200':
          description: Successful invoice item creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the invoice item
                      title:
                        type: string
                        description: Title of the invoice item
                      description:
                        type: string
                        description: Description of the invoice item
                        nullable: true
                      priceInCents:
                        type: number
                        description: Price in cents
                      currency:
                        type: string
                        description: Currency code
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the item was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the item was last updated
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this item belongs to
                    required:
                      - id
                      - title
                      - description
                      - priceInCents
                      - currency
                      - createdAt
                      - updatedAt
                      - siteId
                    description: Created invoice item
                required:
                  - item
                description: Successful invoice item creation response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const invoiceItem = await client.invoiceItems.create({
              priceInCents: 0,
              siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
              title: 'title',
            });

            console.log(invoiceItem.item);
  /v1/invoice-items/{itemId}:
    get:
      description: Retrieves a invoice item by ID
      summary: Get invoice item
      tags: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice item ID
      operationId: getInvoiceItem
      responses:
        '200':
          description: Successful invoice item response
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the invoice item
                      title:
                        type: string
                        description: Title of the invoice item
                      description:
                        type: string
                        description: Description of the invoice item
                        nullable: true
                      priceInCents:
                        type: number
                        description: Price in cents
                      currency:
                        type: string
                        description: Currency code
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the item was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the item was last updated
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this item belongs to
                    required:
                      - id
                      - title
                      - description
                      - priceInCents
                      - currency
                      - createdAt
                      - updatedAt
                      - siteId
                    description: Invoice item data
                required:
                  - item
                description: Successful invoice item response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const invoiceItem = await client.invoiceItems.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(invoiceItem.item);
    put:
      description: Updates a invoice item
      summary: Update invoice item
      tags: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice item ID
      operationId: updateInvoiceItem
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Item title
                priceInCents:
                  type: number
                  description: Price in cents
                description:
                  type: string
                  description: Item description
              description: Invoice item update data
      responses:
        '200':
          description: Successful update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status
                required:
                  - success
                description: Successful update response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const invoiceItem = await client.invoiceItems.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(invoiceItem.success);
    delete:
      description: Deletes a invoice item
      summary: Delete invoice item
      tags: []
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Invoice item ID
      operationId: deleteInvoiceItem
      responses:
        '200':
          description: Successful deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status
                required:
                  - success
                description: Successful deletion response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const invoiceItem = await client.invoiceItems.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(invoiceItem.success);
  /v1/orders:
    get:
      description: Retrieves orders with basic information
      summary: List orders
      tags: []
      parameters:
        - name: site
          in: query
          description: Site slug to retrieve orders for
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getOrders
      responses:
        '200':
          description: Successful orders listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Webhook event ID
                        created:
                          type: number
                          description: Unix timestamp when event was created
                        type:
                          type: string
                          enum:
                            - order.created
                          description: Event type
                        data:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Order ID
                            orderNumber:
                              type: number
                              description: Order number
                            createdAt:
                              type: string
                              description: Order creation date ISO string
                            status:
                              type: string
                              description: Order status
                            totalInCents:
                              type: number
                              description: Total amount in cents
                            currency:
                              type: string
                              description: Currency code
                            customerName:
                              type: string
                              description: Customer full name
                            customerEmail:
                              type: string
                              description: Customer email
                            orderItems:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: Order item ID
                                  name:
                                    type: string
                                    description: Product name
                                  quantity:
                                    type: number
                                    description: Quantity ordered
                                  priceInCents:
                                    type: number
                                    description: Item price in cents
                                  originalPriceInCents:
                                    type: number
                                    description: Original price in cents
                                  taxInCents:
                                    type: number
                                    description: Tax amount in cents
                                required:
                                  - id
                                  - name
                                  - quantity
                                  - priceInCents
                                  - originalPriceInCents
                                  - taxInCents
                                description: Order item details
                              description: Order items
                            siteId:
                              type: string
                              format: uuid
                              description: Site ID
                          required:
                            - id
                            - orderNumber
                            - createdAt
                            - status
                            - totalInCents
                            - currency
                            - customerName
                            - customerEmail
                            - orderItems
                            - siteId
                          description: Order data
                      required:
                        - id
                        - created
                        - type
                        - data
                      description: Order webhook event
                    description: Array of order webhook events in the current page
                  total:
                    type: number
                    description: Total number of orders
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful orders listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const orderListResponse of client.orders.list({ site: 'site' })) {
              console.log(orderListResponse.id);
            }
  /v1/orders/sample:
    get:
      description: Retrieves a sample of orders with basic information
      summary: List sample orders
      tags: []
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getOrdersSample
      responses:
        '200':
          description: Successful orders listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Webhook event ID
                        created:
                          type: number
                          description: Unix timestamp when event was created
                        type:
                          type: string
                          enum:
                            - order.created
                          description: Event type
                        data:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Order ID
                            orderNumber:
                              type: number
                              description: Order number
                            createdAt:
                              type: string
                              description: Order creation date ISO string
                            status:
                              type: string
                              description: Order status
                            totalInCents:
                              type: number
                              description: Total amount in cents
                            currency:
                              type: string
                              description: Currency code
                            customerName:
                              type: string
                              description: Customer full name
                            customerEmail:
                              type: string
                              description: Customer email
                            orderItems:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: Order item ID
                                  name:
                                    type: string
                                    description: Product name
                                  quantity:
                                    type: number
                                    description: Quantity ordered
                                  priceInCents:
                                    type: number
                                    description: Item price in cents
                                  originalPriceInCents:
                                    type: number
                                    description: Original price in cents
                                  taxInCents:
                                    type: number
                                    description: Tax amount in cents
                                required:
                                  - id
                                  - name
                                  - quantity
                                  - priceInCents
                                  - originalPriceInCents
                                  - taxInCents
                                description: Order item details
                              description: Order items
                            siteId:
                              type: string
                              format: uuid
                              description: Site ID
                          required:
                            - id
                            - orderNumber
                            - createdAt
                            - status
                            - totalInCents
                            - currency
                            - customerName
                            - customerEmail
                            - orderItems
                            - siteId
                          description: Order data
                      required:
                        - id
                        - created
                        - type
                        - data
                      description: Order webhook event
                    description: Array of order webhook events in the current page
                  total:
                    type: number
                    description: Total number of orders
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful orders listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const orderListSampleResponse of client.orders.listSample()) {
              console.log(orderListSampleResponse.id);
            }
  /v1/sites/{siteId}/pages:
    get:
      description: Retrieves a paginated list of pages for a specific site.
      summary: List pages
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to retrieve pages for
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getPages
      responses:
        '200':
          description: Successful pages listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the page
                        slug:
                          type: string
                          description: URL-friendly path segment for the page
                        name:
                          type: string
                          description: Name of the page, can be null
                          nullable: true
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site this page belongs to
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the page was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the page was last updated
                        description:
                          type: string
                          description: Description of the page content, can be null
                          nullable: true
                        pageThemeId:
                          type: string
                          format: uuid
                          description: ID of the theme applied to this page, can be null
                          nullable: true
                        bannerMedia:
                          nullable: true
                          description: Banner media for the page, can be null
                        logoMedia:
                          nullable: true
                          description: Logo media for the page, can be null
                        socialIcons:
                          nullable: true
                          description: Social media icons configuration, can be null
                        position:
                          default: 1
                          type: number
                          description: Display position of the page within the site
                        blocks:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: Unique identifier for the block
                              pageId:
                                type: string
                                format: uuid
                                description: ID of the page this block belongs to
                              name:
                                type: string
                                description: Name of the block
                              content:
                                nullable: true
                                description: Content of the block, can be null
                              createdAt:
                                type: string
                                format: date-time
                                description: Date and time when the block was created
                              updatedAt:
                                type: string
                                format: date-time
                                description: Date and time when the block was last updated
                              kind:
                                type: string
                                description: Type or category of the block, can be null
                                nullable: true
                              isComponent:
                                default: false
                                type: boolean
                                description: Whether this block is a component
                              componentBlockId:
                                type: string
                                format: uuid
                                description: ID of the component block if this is an instance, can be null
                                nullable: true
                            required:
                              - id
                              - pageId
                              - name
                              - createdAt
                              - updatedAt
                              - kind
                              - componentBlockId
                          description: Array of content blocks associated with the page
                        pageTheme:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the page theme
                            content:
                              nullable: true
                              description: Theme content configuration, can be null
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the theme was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the theme was last updated
                            isComponent:
                              default: false
                              type: boolean
                              description: Whether this theme is a reusable component
                            componentPageThemeId:
                              type: string
                              description: ID of the parent component theme if this is an instance, can be null
                              nullable: true
                          required:
                            - id
                            - createdAt
                            - updatedAt
                            - componentPageThemeId
                          description: Theme applied to the page, can be null
                          nullable: true
                      required:
                        - id
                        - slug
                        - name
                        - siteId
                        - createdAt
                        - updatedAt
                        - description
                        - pageThemeId
                        - blocks
                        - pageTheme
                      description: Page schema including related blocks and theme information
                    description: Array of pages in the current page of results
                  total:
                    type: number
                    description: Total number of pages matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful pages listing response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            // Automatically fetches more pages as needed.

            for await (const pageListResponse of
            client.sites.pages.list('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e')) {
              console.log(pageListResponse.id);
            }
    post:
      description: Creates a new page within a site with the provided content.
      summary: Create page
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to create a page in
      operationId: createPage
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                slug:
                  type: string
                  description: URL-friendly path segment for the page
                name:
                  type: string
                  description: Name of the page, can be null
                  nullable: true
                siteId:
                  type: string
                  format: uuid
                  description: ID of the site this page belongs to
                description:
                  type: string
                  description: Description of the page content, can be null
                  nullable: true
                bannerMedia:
                  nullable: true
                  description: Banner media for the page, can be null
                logoMedia:
                  nullable: true
                  description: Logo media for the page, can be null
                socialIcons:
                  nullable: true
                  description: Social media icons configuration, can be null
                position:
                  default: 1
                  type: number
                  description: Display position of the page within the site
                pageTheme:
                  type: object
                  properties:
                    content:
                      nullable: true
                      description: Theme content configuration, can be null
                    isComponent:
                      default: false
                      type: boolean
                      description: Whether this theme is a reusable component
                    componentPageThemeId:
                      type: string
                      description: ID of the parent component theme if this is an instance, can be null
                      nullable: true
                  description: Theme to apply to the new page
                blocks:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the block
                      content:
                        nullable: true
                        description: Content of the block, can be null
                      kind:
                        type: string
                        description: Type or category of the block, can be null
                        nullable: true
                      isComponent:
                        default: false
                        type: boolean
                        description: Whether this block is a component
                      componentBlockId:
                        type: string
                        format: uuid
                        description: ID of the component block if this is an instance, can be null
                        nullable: true
                    required:
                      - name
                      - kind
                      - componentBlockId
                    description: Schema for creating a new block
                  description: Initial content blocks for the page
              required:
                - slug
                - name
                - siteId
                - pageTheme
              description: Data for creating a new page with theme and blocks
      responses:
        '201':
          description: Successful page creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the page
                      slug:
                        type: string
                        description: URL-friendly path segment for the page
                      name:
                        type: string
                        description: Name of the page, can be null
                        nullable: true
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this page belongs to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the page was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the page was last updated
                      description:
                        type: string
                        description: Description of the page content, can be null
                        nullable: true
                      pageThemeId:
                        type: string
                        format: uuid
                        description: ID of the theme applied to this page, can be null
                        nullable: true
                      bannerMedia:
                        nullable: true
                        description: Banner media for the page, can be null
                      logoMedia:
                        nullable: true
                        description: Logo media for the page, can be null
                      socialIcons:
                        nullable: true
                        description: Social media icons configuration, can be null
                      position:
                        default: 1
                        type: number
                        description: Display position of the page within the site
                      blocks:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the block
                            pageId:
                              type: string
                              format: uuid
                              description: ID of the page this block belongs to
                            name:
                              type: string
                              description: Name of the block
                            content:
                              nullable: true
                              description: Content of the block, can be null
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the block was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the block was last updated
                            kind:
                              type: string
                              description: Type or category of the block, can be null
                              nullable: true
                            isComponent:
                              default: false
                              type: boolean
                              description: Whether this block is a component
                            componentBlockId:
                              type: string
                              format: uuid
                              description: ID of the component block if this is an instance, can be null
                              nullable: true
                          required:
                            - id
                            - pageId
                            - name
                            - createdAt
                            - updatedAt
                            - kind
                            - componentBlockId
                        description: Array of content blocks associated with the page
                      pageTheme:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Unique identifier for the page theme
                          content:
                            nullable: true
                            description: Theme content configuration, can be null
                          createdAt:
                            type: string
                            format: date-time
                            description: Date and time when the theme was created
                          updatedAt:
                            type: string
                            format: date-time
                            description: Date and time when the theme was last updated
                          isComponent:
                            default: false
                            type: boolean
                            description: Whether this theme is a reusable component
                          componentPageThemeId:
                            type: string
                            description: ID of the parent component theme if this is an instance, can be null
                            nullable: true
                        required:
                          - id
                          - createdAt
                          - updatedAt
                          - componentPageThemeId
                        description: Theme applied to the page, can be null
                        nullable: true
                    required:
                      - id
                      - slug
                      - name
                      - siteId
                      - createdAt
                      - updatedAt
                      - description
                      - pageThemeId
                      - blocks
                      - pageTheme
                    description: The newly created page with all relations
                required:
                  - page
                description: Successful page creation response
        '400':
          description: Validation error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Validation error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const page = await client.sites.pages.create('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              name: 'name',
              pageTheme: {},
              body_siteId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
              slug: 'slug',
            });

            console.log(page.page);
  /v1/pages/{pageId}:
    get:
      description: Retrieves a specific page by ID including all related blocks and theme information.
      summary: Get page
      tags: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the page to retrieve
      operationId: getPage
      responses:
        '200':
          description: Successful page retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the page
                      slug:
                        type: string
                        description: URL-friendly path segment for the page
                      name:
                        type: string
                        description: Name of the page, can be null
                        nullable: true
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this page belongs to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the page was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the page was last updated
                      description:
                        type: string
                        description: Description of the page content, can be null
                        nullable: true
                      pageThemeId:
                        type: string
                        format: uuid
                        description: ID of the theme applied to this page, can be null
                        nullable: true
                      bannerMedia:
                        nullable: true
                        description: Banner media for the page, can be null
                      logoMedia:
                        nullable: true
                        description: Logo media for the page, can be null
                      socialIcons:
                        nullable: true
                        description: Social media icons configuration, can be null
                      position:
                        default: 1
                        type: number
                        description: Display position of the page within the site
                      blocks:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the block
                            pageId:
                              type: string
                              format: uuid
                              description: ID of the page this block belongs to
                            name:
                              type: string
                              description: Name of the block
                            content:
                              nullable: true
                              description: Content of the block, can be null
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the block was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the block was last updated
                            kind:
                              type: string
                              description: Type or category of the block, can be null
                              nullable: true
                            isComponent:
                              default: false
                              type: boolean
                              description: Whether this block is a component
                            componentBlockId:
                              type: string
                              format: uuid
                              description: ID of the component block if this is an instance, can be null
                              nullable: true
                          required:
                            - id
                            - pageId
                            - name
                            - createdAt
                            - updatedAt
                            - kind
                            - componentBlockId
                        description: Array of content blocks associated with the page
                      pageTheme:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Unique identifier for the page theme
                          content:
                            nullable: true
                            description: Theme content configuration, can be null
                          createdAt:
                            type: string
                            format: date-time
                            description: Date and time when the theme was created
                          updatedAt:
                            type: string
                            format: date-time
                            description: Date and time when the theme was last updated
                          isComponent:
                            default: false
                            type: boolean
                            description: Whether this theme is a reusable component
                          componentPageThemeId:
                            type: string
                            description: ID of the parent component theme if this is an instance, can be null
                            nullable: true
                        required:
                          - id
                          - createdAt
                          - updatedAt
                          - componentPageThemeId
                        description: Theme applied to the page, can be null
                        nullable: true
                    required:
                      - id
                      - slug
                      - name
                      - siteId
                      - createdAt
                      - updatedAt
                      - description
                      - pageThemeId
                      - blocks
                      - pageTheme
                    description: The requested page with all relations
                required:
                  - page
                description: Successful page retrieval response
        '404':
          description: Page not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Page not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const page = await client.pages.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(page.page);
    patch:
      description: Updates an existing page with the provided data.
      summary: Update page
      tags: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the page to update
      operationId: updatePage
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                slug:
                  type: string
                  description: URL-friendly path segment for the page
                name:
                  type: string
                  description: Name of the page, can be null
                  nullable: true
                siteId:
                  type: string
                  format: uuid
                  description: ID of the site this page belongs to
                description:
                  type: string
                  description: Description of the page content, can be null
                  nullable: true
                bannerMedia:
                  nullable: true
                  description: Banner media for the page, can be null
                logoMedia:
                  nullable: true
                  description: Logo media for the page, can be null
                socialIcons:
                  nullable: true
                  description: Social media icons configuration, can be null
                position:
                  default: 1
                  type: number
                  description: Display position of the page within the site
              description: Fields to update on the page
      responses:
        '200':
          description: Successful page update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the page
                      slug:
                        type: string
                        description: URL-friendly path segment for the page
                      name:
                        type: string
                        description: Name of the page, can be null
                        nullable: true
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site this page belongs to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the page was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the page was last updated
                      description:
                        type: string
                        description: Description of the page content, can be null
                        nullable: true
                      pageThemeId:
                        type: string
                        format: uuid
                        description: ID of the theme applied to this page, can be null
                        nullable: true
                      bannerMedia:
                        nullable: true
                        description: Banner media for the page, can be null
                      logoMedia:
                        nullable: true
                        description: Logo media for the page, can be null
                      socialIcons:
                        nullable: true
                        description: Social media icons configuration, can be null
                      position:
                        default: 1
                        type: number
                        description: Display position of the page within the site
                      blocks:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the block
                            pageId:
                              type: string
                              format: uuid
                              description: ID of the page this block belongs to
                            name:
                              type: string
                              description: Name of the block
                            content:
                              nullable: true
                              description: Content of the block, can be null
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the block was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the block was last updated
                            kind:
                              type: string
                              description: Type or category of the block, can be null
                              nullable: true
                            isComponent:
                              default: false
                              type: boolean
                              description: Whether this block is a component
                            componentBlockId:
                              type: string
                              format: uuid
                              description: ID of the component block if this is an instance, can be null
                              nullable: true
                          required:
                            - id
                            - pageId
                            - name
                            - createdAt
                            - updatedAt
                            - kind
                            - componentBlockId
                        description: Array of content blocks associated with the page
                      pageTheme:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Unique identifier for the page theme
                          content:
                            nullable: true
                            description: Theme content configuration, can be null
                          createdAt:
                            type: string
                            format: date-time
                            description: Date and time when the theme was created
                          updatedAt:
                            type: string
                            format: date-time
                            description: Date and time when the theme was last updated
                          isComponent:
                            default: false
                            type: boolean
                            description: Whether this theme is a reusable component
                          componentPageThemeId:
                            type: string
                            description: ID of the parent component theme if this is an instance, can be null
                            nullable: true
                        required:
                          - id
                          - createdAt
                          - updatedAt
                          - componentPageThemeId
                        description: Theme applied to the page, can be null
                        nullable: true
                    required:
                      - id
                      - slug
                      - name
                      - siteId
                      - createdAt
                      - updatedAt
                      - description
                      - pageThemeId
                      - blocks
                      - pageTheme
                    description: The updated page with all relations
                required:
                  - page
                description: Successful page update response
        '404':
          description: Page not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Page not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const page = await client.pages.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(page.page);
    delete:
      description: Permanently deletes a page and all associated data.
      summary: Delete page
      tags: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the page to delete
      operationId: deletePage
      responses:
        '200':
          description: Successful page deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the deletion was successful
                required:
                  - success
                description: Successful page deletion response
        '404':
          description: Page not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Page not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const page = await client.pages.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(page.success);
  /v1/pages/{pageId}/theme:
    get:
      description: Retrieves the theme associated with a specific page
      summary: Get page theme
      tags: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the page to retrieve the theme for
      operationId: getPageTheme
      responses:
        '200':
          description: Successful theme retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageTheme:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the page theme
                      content:
                        nullable: true
                        description: Theme content configuration, can be null
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the theme was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the theme was last updated
                      isComponent:
                        default: false
                        type: boolean
                        description: Whether this theme is a reusable component
                      componentPageThemeId:
                        type: string
                        description: ID of the parent component theme if this is an instance, can be null
                        nullable: true
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - componentPageThemeId
                    description: The theme associated with the requested page
                required:
                  - pageTheme
                description: Successful theme retrieval response
        '404':
          description: Page or theme not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Page or theme not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const theme = await client.pages.theme.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(theme.pageTheme);
    patch:
      description: Creates or updates the theme for a specific page
      summary: Update page theme
      tags: []
      parameters:
        - name: pageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the page to update the theme for
      operationId: upsertPageTheme
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  nullable: true
                  description: Theme content configuration, can be null
                isComponent:
                  default: false
                  type: boolean
                  description: Whether this theme is a reusable component
                componentPageThemeId:
                  type: string
                  description: ID of the parent component theme if this is an instance, can be null
                  nullable: true
              description: Theme data to update
      responses:
        '200':
          description: Successful theme update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageTheme:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the page theme
                      content:
                        nullable: true
                        description: Theme content configuration, can be null
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the theme was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the theme was last updated
                      isComponent:
                        default: false
                        type: boolean
                        description: Whether this theme is a reusable component
                      componentPageThemeId:
                        type: string
                        description: ID of the parent component theme if this is an instance, can be null
                        nullable: true
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - componentPageThemeId
                    description: The updated or created page theme
                required:
                  - pageTheme
                description: Successful theme update response
        '404':
          description: Page not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Page not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const theme = await client.pages.theme.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(theme.pageTheme);
  /v1/sites:
    post:
      description: Creates a new site with associated pages, themes, and blocks
      summary: Create site
      tags: []
      parameters: []
      operationId: createSite
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the site
                description:
                  type: string
                  description: Description of the site, can be null
                  nullable: true
                slug:
                  type: string
                  description: URL-friendly identifier for the site
                status:
                  default: ENABLED
                  type: string
                  enum:
                    - EMPTY
                    - UNPUBLISHED
                    - PREVIEW
                    - SOFT_CLAIM
                    - ENABLED
                    - DEMO
                    - ARCHIVED
                  description: Current status of the site
                locationId:
                  type: string
                  description: ID of the associated location, can be null
                  nullable: true
                businessType:
                  type: string
                  description: Type of business the site represents, can be null
                  nullable: true
                homePageId:
                  type: string
                  format: uuid
                  description: ID of the site's home page, can be null
                  nullable: true
                timeZone:
                  type: string
                  description: Time zone for the site, can be null
                  nullable: true
                workspaceId:
                  type: string
                  format: uuid
                  description: ID of the workspace this site belongs to, can be null
                  nullable: true
                logoMedia:
                  nullable: true
                  description: Logo media for the site, can be null
                socialIcons:
                  nullable: true
                  description: Social media icons configuration, can be null
                pages:
                  type: array
                  items:
                    type: object
                    properties:
                      slug:
                        type: string
                        description: URL-friendly path segment for the page
                      name:
                        type: string
                        description: Name of the page, can be null
                        nullable: true
                      description:
                        type: string
                        description: Description of the page content, can be null
                        nullable: true
                      bannerMedia:
                        nullable: true
                        description: Banner media for the page, can be null
                      logoMedia:
                        nullable: true
                        description: Logo media for the page, can be null
                      socialIcons:
                        nullable: true
                        description: Social media icons configuration, can be null
                      position:
                        default: 1
                        type: number
                        description: Display position of the page within the site
                      pageTheme:
                        type: object
                        properties:
                          content:
                            nullable: true
                            description: Theme content configuration, can be null
                          isComponent:
                            default: false
                            type: boolean
                            description: Whether this theme is a reusable component
                          componentPageThemeId:
                            type: string
                            description: ID of the parent component theme if this is an instance, can be null
                            nullable: true
                        description: Theme for the page
                      blocks:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Name of the block
                            content:
                              nullable: true
                              description: Content of the block, can be null
                            kind:
                              type: string
                              description: Type or category of the block, can be null
                              nullable: true
                            isComponent:
                              default: false
                              type: boolean
                              description: Whether this block is a component
                            componentBlockId:
                              type: string
                              format: uuid
                              description: ID of the component block if this is an instance, can be null
                              nullable: true
                          required:
                            - name
                            - kind
                            - componentBlockId
                          description: Schema for creating a new block
                        description: Content blocks for the page
                    required:
                      - slug
                      - name
                      - pageTheme
                    description: Page to create with theme and blocks
                  description: Array of pages to create with the site
              required:
                - name
                - slug
                - businessType
                - pages
              description: Data for creating a new site with pages
      responses:
        '201':
          description: Successful site creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  site:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the site
                      name:
                        type: string
                        description: Name of the site
                      description:
                        type: string
                        description: Description of the site, can be null
                        nullable: true
                      slug:
                        type: string
                        description: URL-friendly identifier for the site
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the site was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the site was last updated
                      overridePlan:
                        type: string
                        description: Custom plan override for the site, can be null
                        nullable: true
                      status:
                        default: ENABLED
                        type: string
                        enum:
                          - EMPTY
                          - UNPUBLISHED
                          - PREVIEW
                          - SOFT_CLAIM
                          - ENABLED
                          - DEMO
                          - ARCHIVED
                        description: Current status of the site
                      locationId:
                        type: string
                        description: ID of the associated location, can be null
                        nullable: true
                      businessType:
                        type: string
                        description: Type of business the site represents, can be null
                        nullable: true
                      homePageId:
                        type: string
                        format: uuid
                        description: ID of the site's home page, can be null
                        nullable: true
                      timeZone:
                        type: string
                        description: Time zone for the site, can be null
                        nullable: true
                      workspaceId:
                        type: string
                        format: uuid
                        description: ID of the workspace this site belongs to, can be null
                        nullable: true
                      logoMedia:
                        nullable: true
                        description: Logo media for the site, can be null
                      socialIcons:
                        nullable: true
                        description: Social media icons configuration, can be null
                      pages:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the page
                            slug:
                              type: string
                              description: URL-friendly path segment for the page
                            name:
                              type: string
                              description: Name of the page, can be null
                              nullable: true
                            siteId:
                              type: string
                              format: uuid
                              description: ID of the site this page belongs to
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the page was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the page was last updated
                            description:
                              type: string
                              description: Description of the page content, can be null
                              nullable: true
                            pageThemeId:
                              type: string
                              format: uuid
                              description: ID of the theme applied to this page, can be null
                              nullable: true
                            bannerMedia:
                              nullable: true
                              description: Banner media for the page, can be null
                            logoMedia:
                              nullable: true
                              description: Logo media for the page, can be null
                            socialIcons:
                              nullable: true
                              description: Social media icons configuration, can be null
                            position:
                              default: 1
                              type: number
                              description: Display position of the page within the site
                          required:
                            - id
                            - slug
                            - name
                            - siteId
                            - createdAt
                            - updatedAt
                            - description
                            - pageThemeId
                          description: Schema for a page entity
                        description: Array of pages associated with this site
                    required:
                      - id
                      - name
                      - description
                      - slug
                      - createdAt
                      - updatedAt
                      - overridePlan
                      - locationId
                      - businessType
                      - homePageId
                      - timeZone
                      - workspaceId
                      - pages
                    description: The newly created site with all relations
                required:
                  - site
                description: Successful site creation response
        '400':
          description: Validation error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Validation error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const site = await client.sites.create({
              businessType: 'businessType',
              name: 'name',
              pages: [{ name: 'name', pageTheme: {}, slug: 'slug' }],
              slug: 'slug',
            });

            console.log(site.site);
    get:
      description: Retrieves a paginated list of sites with optional filtering
      summary: List sites
      tags: []
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: search
          in: query
          description: Search query
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: workspaceId
          in: query
          description: Filter sites by workspace ID
          schema:
            type: string
            format: uuid
        - name: statuses
          in: query
          description: Filter sites by status
          schema:
            type: array
            items:
              type: string
              enum:
                - EMPTY
                - UNPUBLISHED
                - PREVIEW
                - SOFT_CLAIM
                - ENABLED
                - DEMO
                - ARCHIVED
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getSites
      responses:
        '200':
          description: Successful sites listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the site
                        name:
                          type: string
                          description: Name of the site
                        description:
                          type: string
                          description: Description of the site, can be null
                          nullable: true
                        slug:
                          type: string
                          description: URL-friendly identifier for the site
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the site was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the site was last updated
                        overridePlan:
                          type: string
                          description: Custom plan override for the site, can be null
                          nullable: true
                        status:
                          default: ENABLED
                          type: string
                          enum:
                            - EMPTY
                            - UNPUBLISHED
                            - PREVIEW
                            - SOFT_CLAIM
                            - ENABLED
                            - DEMO
                            - ARCHIVED
                          description: Current status of the site
                        locationId:
                          type: string
                          description: ID of the associated location, can be null
                          nullable: true
                        businessType:
                          type: string
                          description: Type of business the site represents, can be null
                          nullable: true
                        homePageId:
                          type: string
                          format: uuid
                          description: ID of the site's home page, can be null
                          nullable: true
                        timeZone:
                          type: string
                          description: Time zone for the site, can be null
                          nullable: true
                        workspaceId:
                          type: string
                          format: uuid
                          description: ID of the workspace this site belongs to, can be null
                          nullable: true
                        logoMedia:
                          nullable: true
                          description: Logo media for the site, can be null
                        socialIcons:
                          nullable: true
                          description: Social media icons configuration, can be null
                      required:
                        - id
                        - name
                        - description
                        - slug
                        - createdAt
                        - updatedAt
                        - overridePlan
                        - locationId
                        - businessType
                        - homePageId
                        - timeZone
                        - workspaceId
                      description: Schema for a site entity
                    description: Array of sites in the current page of results
                  total:
                    type: number
                    description: Total number of sites matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful sites listing response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const siteListResponse of client.sites.list()) {
              console.log(siteListResponse.id);
            }
  /v1/sites/{siteId}:
    get:
      description: Retrieves a specific site and its related data by site ID
      summary: Get site
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to retrieve
      operationId: getSite
      responses:
        '200':
          description: Successful site retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  site:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the site
                      name:
                        type: string
                        description: Name of the site
                      description:
                        type: string
                        description: Description of the site, can be null
                        nullable: true
                      slug:
                        type: string
                        description: URL-friendly identifier for the site
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the site was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the site was last updated
                      overridePlan:
                        type: string
                        description: Custom plan override for the site, can be null
                        nullable: true
                      status:
                        default: ENABLED
                        type: string
                        enum:
                          - EMPTY
                          - UNPUBLISHED
                          - PREVIEW
                          - SOFT_CLAIM
                          - ENABLED
                          - DEMO
                          - ARCHIVED
                        description: Current status of the site
                      locationId:
                        type: string
                        description: ID of the associated location, can be null
                        nullable: true
                      businessType:
                        type: string
                        description: Type of business the site represents, can be null
                        nullable: true
                      homePageId:
                        type: string
                        format: uuid
                        description: ID of the site's home page, can be null
                        nullable: true
                      timeZone:
                        type: string
                        description: Time zone for the site, can be null
                        nullable: true
                      workspaceId:
                        type: string
                        format: uuid
                        description: ID of the workspace this site belongs to, can be null
                        nullable: true
                      logoMedia:
                        nullable: true
                        description: Logo media for the site, can be null
                      socialIcons:
                        nullable: true
                        description: Social media icons configuration, can be null
                      pages:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the page
                            slug:
                              type: string
                              description: URL-friendly path segment for the page
                            name:
                              type: string
                              description: Name of the page, can be null
                              nullable: true
                            siteId:
                              type: string
                              format: uuid
                              description: ID of the site this page belongs to
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the page was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the page was last updated
                            description:
                              type: string
                              description: Description of the page content, can be null
                              nullable: true
                            pageThemeId:
                              type: string
                              format: uuid
                              description: ID of the theme applied to this page, can be null
                              nullable: true
                            bannerMedia:
                              nullable: true
                              description: Banner media for the page, can be null
                            logoMedia:
                              nullable: true
                              description: Logo media for the page, can be null
                            socialIcons:
                              nullable: true
                              description: Social media icons configuration, can be null
                            position:
                              default: 1
                              type: number
                              description: Display position of the page within the site
                          required:
                            - id
                            - slug
                            - name
                            - siteId
                            - createdAt
                            - updatedAt
                            - description
                            - pageThemeId
                          description: Schema for a page entity
                        description: Array of pages associated with this site
                    required:
                      - id
                      - name
                      - description
                      - slug
                      - createdAt
                      - updatedAt
                      - overridePlan
                      - locationId
                      - businessType
                      - homePageId
                      - timeZone
                      - workspaceId
                      - pages
                    description: The requested site with all relations
                required:
                  - site
                description: Successful site retrieval response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const site = await client.sites.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(site.site);
    patch:
      description: Updates an existing site with provided partial data
      summary: Update site
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to update
      operationId: updateSite
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the site
                description:
                  type: string
                  description: Description of the site, can be null
                  nullable: true
                slug:
                  type: string
                  description: URL-friendly identifier for the site
                status:
                  default: ENABLED
                  type: string
                  enum:
                    - EMPTY
                    - UNPUBLISHED
                    - PREVIEW
                    - SOFT_CLAIM
                    - ENABLED
                    - DEMO
                    - ARCHIVED
                  description: Current status of the site
                locationId:
                  type: string
                  description: ID of the associated location, can be null
                  nullable: true
                businessType:
                  type: string
                  description: Type of business the site represents, can be null
                  nullable: true
                homePageId:
                  type: string
                  format: uuid
                  description: ID of the site's home page, can be null
                  nullable: true
                timeZone:
                  type: string
                  description: Time zone for the site, can be null
                  nullable: true
                workspaceId:
                  type: string
                  format: uuid
                  description: ID of the workspace this site belongs to, can be null
                  nullable: true
                logoMedia:
                  nullable: true
                  description: Logo media for the site, can be null
                socialIcons:
                  nullable: true
                  description: Social media icons configuration, can be null
              description: Fields to update on the site
      responses:
        '200':
          description: Successful site update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  site:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the site
                      name:
                        type: string
                        description: Name of the site
                      description:
                        type: string
                        description: Description of the site, can be null
                        nullable: true
                      slug:
                        type: string
                        description: URL-friendly identifier for the site
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the site was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the site was last updated
                      overridePlan:
                        type: string
                        description: Custom plan override for the site, can be null
                        nullable: true
                      status:
                        default: ENABLED
                        type: string
                        enum:
                          - EMPTY
                          - UNPUBLISHED
                          - PREVIEW
                          - SOFT_CLAIM
                          - ENABLED
                          - DEMO
                          - ARCHIVED
                        description: Current status of the site
                      locationId:
                        type: string
                        description: ID of the associated location, can be null
                        nullable: true
                      businessType:
                        type: string
                        description: Type of business the site represents, can be null
                        nullable: true
                      homePageId:
                        type: string
                        format: uuid
                        description: ID of the site's home page, can be null
                        nullable: true
                      timeZone:
                        type: string
                        description: Time zone for the site, can be null
                        nullable: true
                      workspaceId:
                        type: string
                        format: uuid
                        description: ID of the workspace this site belongs to, can be null
                        nullable: true
                      logoMedia:
                        nullable: true
                        description: Logo media for the site, can be null
                      socialIcons:
                        nullable: true
                        description: Social media icons configuration, can be null
                      pages:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the page
                            slug:
                              type: string
                              description: URL-friendly path segment for the page
                            name:
                              type: string
                              description: Name of the page, can be null
                              nullable: true
                            siteId:
                              type: string
                              format: uuid
                              description: ID of the site this page belongs to
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the page was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the page was last updated
                            description:
                              type: string
                              description: Description of the page content, can be null
                              nullable: true
                            pageThemeId:
                              type: string
                              format: uuid
                              description: ID of the theme applied to this page, can be null
                              nullable: true
                            bannerMedia:
                              nullable: true
                              description: Banner media for the page, can be null
                            logoMedia:
                              nullable: true
                              description: Logo media for the page, can be null
                            socialIcons:
                              nullable: true
                              description: Social media icons configuration, can be null
                            position:
                              default: 1
                              type: number
                              description: Display position of the page within the site
                          required:
                            - id
                            - slug
                            - name
                            - siteId
                            - createdAt
                            - updatedAt
                            - description
                            - pageThemeId
                          description: Schema for a page entity
                        description: Array of pages associated with this site
                    required:
                      - id
                      - name
                      - description
                      - slug
                      - createdAt
                      - updatedAt
                      - overridePlan
                      - locationId
                      - businessType
                      - homePageId
                      - timeZone
                      - workspaceId
                      - pages
                    description: The updated site with all relations
                required:
                  - site
                description: Successful site update response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const site = await client.sites.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(site.site);
    delete:
      description: Permanently deletes a site by its ID
      summary: Delete site
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to delete
      operationId: deleteSite
      responses:
        '200':
          description: Successful site deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the deletion was successful
                required:
                  - success
                description: Successful site deletion response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const site = await client.sites.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(site.success);
  /v1/site-contacts:
    get:
      description: Retrieves site contacts with basic contact information
      summary: List site contacts
      tags: []
      parameters:
        - name: siteId
          in: query
          description: Site ID to filter contacts
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: search
          in: query
          description: Search term for contacts
          schema:
            type: string
        - name: marketingStatuses
          in: query
          description: Filter by marketing status
          schema:
            type: array
            items:
              type: string
              enum:
                - SUBSCRIBED
                - UNSUBSCRIBED
                - CLEANED
                - PENDING
                - TRANSACTIONAL
                - ARCHIVED
        - name: hasSegmentation
          in: query
          description: Enable segmentation filters
          schema:
            type: boolean
            nullable: true
        - name: hasRatings
          in: query
          description: Filter contacts with ratings
          schema:
            type: boolean
            nullable: true
        - name: hasFormResponses
          in: query
          description: Filter contacts with form responses
          schema:
            type: boolean
            nullable: true
        - name: hasAppointments
          in: query
          description: Filter contacts with appointments
          schema:
            type: boolean
            nullable: true
        - name: hasOrders
          in: query
          description: Filter contacts with orders
          schema:
            type: boolean
            nullable: true
        - name: hasInvoices
          in: query
          description: Filter contacts with invoices
          schema:
            type: boolean
            nullable: true
        - name: hasQuotes
          in: query
          description: Filter contacts with quotes
          schema:
            type: boolean
            nullable: true
        - name: hasPayments
          in: query
          description: Filter contacts with payments
          schema:
            type: boolean
            nullable: true
        - name: createdAfter
          in: query
          description: Filter contacts created after date
          schema:
            type: string
      operationId: getSiteContacts
      responses:
        '200':
          description: Site contacts list with pagination
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        siteContact:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Unique identifier for the site contact
                            email:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Email address of the contact, can be null
                              nullable: true
                            name:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Full name of the contact, can be null
                              nullable: true
                            firstName:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: First name of the contact, can be null
                              nullable: true
                            lastName:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Last name of the contact, can be null
                              nullable: true
                            phone:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Phone number of the contact, can be null
                              nullable: true
                            businessName:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Business name associated with the contact, can be null
                              nullable: true
                            jobTitle:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Job title of the contact, can be null
                              nullable: true
                            userId:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: User ID associated with the contact, can be null
                              nullable: true
                            currency:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Preferred currency of the contact, can be null
                              nullable: true
                            language:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Preferred language of the contact, can be null
                              nullable: true
                            createdAt:
                              type: string
                              description: Timestamp when the contact was created
                            updatedAt:
                              type: string
                              description: Timestamp when the contact was last updated
                            marketingStatus:
                              type: string
                              enum:
                                - SUBSCRIBED
                                - UNSUBSCRIBED
                                - CLEANED
                                - PENDING
                                - TRANSACTIONAL
                                - ARCHIVED
                              description: Marketing consent status of the contact
                            unsubscribedAt:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Timestamp when the contact unsubscribed, can be null
                              nullable: true
                            unsubscribeReason:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Reason provided for unsubscribing, can be null
                              nullable: true
                            subscribedAt:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Timestamp when the contact subscribed, can be null
                              nullable: true
                            source:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Source of the contact (e.g., form, import), can be null
                              nullable: true
                            timeZone:
                              oneOf:
                                - type: string
                                - type: string
                                  format: 'null'
                                  nullable: true
                              description: Preferred time zone of the contact, can be null
                              nullable: true
                            siteId:
                              type: string
                              description: ID of the site this contact is associated with
                          required:
                            - id
                            - email
                            - name
                            - firstName
                            - lastName
                            - phone
                            - businessName
                            - jobTitle
                            - userId
                            - currency
                            - language
                            - createdAt
                            - updatedAt
                            - marketingStatus
                            - unsubscribedAt
                            - unsubscribeReason
                            - subscribedAt
                            - source
                            - timeZone
                            - siteId
                          description: Schema for a site contact entity
                        rating:
                          type: number
                          nullable: true
                        formResponsesCount:
                          type: number
                        appointmentsCount:
                          type: number
                        ordersCount:
                          type: number
                        invoicesCount:
                          type: number
                        quotesCount:
                          type: number
                        paymentsCount:
                          type: number
                        paymentAmountInCents:
                          type: number
                        currency:
                          type: string
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                            required:
                              - id
                              - name
                      required:
                        - siteContact
                        - formResponsesCount
                        - appointmentsCount
                        - ordersCount
                        - invoicesCount
                        - quotesCount
                        - paymentsCount
                        - paymentAmountInCents
                        - currency
                        - tags
                  total:
                    type: number
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                      endCursor:
                        type: string
                        nullable: true
                    required:
                      - hasNextPage
                      - endCursor
                required:
                  - items
                  - total
                  - pageInfo
                description: Site contacts list with pagination
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const siteContactListResponse of client.siteContacts.list({ siteId: 'siteId' })) {
              console.log(siteContactListResponse.appointmentsCount);
            }
    post:
      description: Creates a new contact associated with a site including marketing preferences
      summary: Create site contact
      tags: []
      parameters: []
      operationId: createSiteContact
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: First name of the contact
                lastName:
                  type: string
                  description: Last name of the contact
                email:
                  type: string
                  description: Email address of the contact
                phone:
                  type: string
                  description: Phone number of the contact
                siteId:
                  type: string
                  description: ID of the site to associate this contact with
                notes:
                  type: string
                  description: Additional notes about the contact
                marketingStatus:
                  type: string
                  enum:
                    - SUBSCRIBED
                    - UNSUBSCRIBED
                    - CLEANED
                    - PENDING
                    - TRANSACTIONAL
                    - ARCHIVED
                  description: Marketing consent status of the contact
              required:
                - email
                - siteId
              description: Data for creating a new site contact
      responses:
        '200':
          description: Successful site contact creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  siteContact:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the site contact
                      email:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Email address of the contact, can be null
                        nullable: true
                      name:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Full name of the contact, can be null
                        nullable: true
                      firstName:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: First name of the contact, can be null
                        nullable: true
                      lastName:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Last name of the contact, can be null
                        nullable: true
                      phone:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Phone number of the contact, can be null
                        nullable: true
                      businessName:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Business name associated with the contact, can be null
                        nullable: true
                      jobTitle:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Job title of the contact, can be null
                        nullable: true
                      userId:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: User ID associated with the contact, can be null
                        nullable: true
                      currency:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Preferred currency of the contact, can be null
                        nullable: true
                      language:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Preferred language of the contact, can be null
                        nullable: true
                      createdAt:
                        type: string
                        description: Timestamp when the contact was created
                      updatedAt:
                        type: string
                        description: Timestamp when the contact was last updated
                      marketingStatus:
                        type: string
                        enum:
                          - SUBSCRIBED
                          - UNSUBSCRIBED
                          - CLEANED
                          - PENDING
                          - TRANSACTIONAL
                          - ARCHIVED
                        description: Marketing consent status of the contact
                      unsubscribedAt:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Timestamp when the contact unsubscribed, can be null
                        nullable: true
                      unsubscribeReason:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Reason provided for unsubscribing, can be null
                        nullable: true
                      subscribedAt:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Timestamp when the contact subscribed, can be null
                        nullable: true
                      source:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Source of the contact (e.g., form, import), can be null
                        nullable: true
                      timeZone:
                        oneOf:
                          - type: string
                          - type: string
                            format: 'null'
                            nullable: true
                        description: Preferred time zone of the contact, can be null
                        nullable: true
                      siteId:
                        type: string
                        description: ID of the site this contact is associated with
                    required:
                      - id
                      - email
                      - name
                      - firstName
                      - lastName
                      - phone
                      - businessName
                      - jobTitle
                      - userId
                      - currency
                      - language
                      - createdAt
                      - updatedAt
                      - marketingStatus
                      - unsubscribedAt
                      - unsubscribeReason
                      - subscribedAt
                      - source
                      - timeZone
                      - siteId
                    description: The newly created site contact
                required:
                  - siteContact
                description: Successful site contact creation response
        '400':
          description: Validation error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Validation error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const siteContact = await client.siteContacts.create({ email: 'email', siteId: 'siteId' });

            console.log(siteContact.siteContact);
  /v1/site-contacts/sample:
    get:
      description: Retrieves a sample of site contacts with basic contact information
      summary: List sample site contacts
      tags: []
      parameters: []
      operationId: getSiteContactsSample
      responses:
        '200':
          description: Array of simplified site contacts with basic information
          content:
            application/json:
              schema:
                description: Array of simplified site contacts with basic information
                nullable: true
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const response = await client.siteContacts.listSample();

            console.log(response);
  /v1/sites/{siteId}/invitations:
    post:
      description: Creates a new invitation for a user to join a site
      summary: Create site invitation
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to create an invitation for
      operationId: createSiteInvitation
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email address of the user to invite
                role:
                  type: string
                  enum:
                    - OWNER
                    - EDITOR
                    - VIEWER
                  description: Role to assign to the invited user
              required:
                - email
                - role
              description: Data for creating a site invitation
      responses:
        '201':
          description: Successful site invitation creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the invitation was created successfully
                  invitation:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the site invitation
                      email:
                        type: string
                        description: Email address of the invited user
                        nullable: true
                      role:
                        type: string
                        enum:
                          - OWNER
                          - EDITOR
                          - VIEWER
                        description: Role assigned to the invited user
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site the user is invited to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was last updated
                      expiresAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation expires
                      accepted:
                        type: boolean
                        description: Whether the invitation has been accepted
                    required:
                      - id
                      - email
                      - role
                      - siteId
                      - createdAt
                      - updatedAt
                      - expiresAt
                      - accepted
                    description: The created site invitation
                required:
                  - success
                description: Successful site invitation creation response
        '400':
          description: Invalid input error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invalid input error response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
        '409':
          description: Invitation already exists error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invitation already exists error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const siteInvitation = await client.siteInvitations.create('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            {
              email: 'dev@stainless.com',
              role: 'OWNER',
            });


            console.log(siteInvitation.success);
    get:
      description: Retrieves a paginated list of invitations for a specific site
      summary: List site invitations
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
          description: ID of the site to retrieve invitations for
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getSiteInvitations
      responses:
        '200':
          description: Successful site invitations listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the site invitation
                        email:
                          type: string
                          description: Email address of the invited user
                          nullable: true
                        role:
                          type: string
                          enum:
                            - OWNER
                            - EDITOR
                            - VIEWER
                          description: Role assigned to the invited user
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site the user is invited to
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the invitation was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the invitation was last updated
                        expiresAt:
                          type: string
                          format: date-time
                          description: Date and time when the invitation expires
                        accepted:
                          type: boolean
                          description: Whether the invitation has been accepted
                      required:
                        - id
                        - email
                        - role
                        - siteId
                        - createdAt
                        - updatedAt
                        - expiresAt
                        - accepted
                      description: Schema for a site invitation entity
                    description: Array of invitations in the current page of results
                  total:
                    type: number
                    description: Total number of invitations matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful site invitations listing response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const siteInvitationListResponse of client.siteInvitations.list('siteId')) {
              console.log(siteInvitationListResponse.id);
            }
  /v1/site-invitations/{invitationId}:
    get:
      description: Retrieves details of a specific site invitation
      summary: Get site invitation
      tags: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the invitation to retrieve
      operationId: getSiteInvitation
      responses:
        '200':
          description: Successful site invitation retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the site invitation
                      email:
                        type: string
                        description: Email address of the invited user
                        nullable: true
                      role:
                        type: string
                        enum:
                          - OWNER
                          - EDITOR
                          - VIEWER
                        description: Role assigned to the invited user
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site the user is invited to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was last updated
                      expiresAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation expires
                      accepted:
                        type: boolean
                        description: Whether the invitation has been accepted
                    required:
                      - id
                      - email
                      - role
                      - siteId
                      - createdAt
                      - updatedAt
                      - expiresAt
                      - accepted
                    description: The requested site invitation
                  siteName:
                    type: string
                    description: Name of the site the invitation is for
                  siteId:
                    type: string
                    format: uuid
                    description: ID of the site the invitation is for
                required:
                  - invitation
                  - siteName
                  - siteId
                description: Successful site invitation retrieval response
        '404':
          description: Invitation not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invitation not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const siteInvitation = await
            client.siteInvitations.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');


            console.log(siteInvitation.invitation);
    delete:
      description: Deletes an existing site invitation
      summary: Delete site invitation
      tags: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the invitation to delete
      operationId: deleteSiteInvitation
      responses:
        '200':
          description: Successful site invitation deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the invitation was deleted successfully
                required:
                  - success
                description: Successful site invitation deletion response
        '404':
          description: Invitation not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invitation not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const siteInvitation = await
            client.siteInvitations.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');


            console.log(siteInvitation.success);
  /v1/sites/{siteId}/memberships:
    post:
      description: Adds a user to a site
      summary: Create site membership
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to add the user to
      operationId: createSiteMembership
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  description: ID of the user to add
                role:
                  type: string
                  enum:
                    - OWNER
                    - EDITOR
                    - VIEWER
                  description: Role to assign to the user
              required:
                - userId
                - role
              description: Data for creating a site membership
      responses:
        '201':
          description: Successful site membership creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the membership was created successfully
                required:
                  - success
                description: Successful site membership creation response
        '400':
          description: Invalid input error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invalid input error response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
        '409':
          description: User already a member error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: User already a member error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const siteMembership = await client.siteMemberships.create('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            {
              role: 'OWNER',
              userId: '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            });


            console.log(siteMembership.success);
    get:
      description: Retrieves a paginated list of members for a specific site
      summary: List site memberships
      tags: []
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the site to retrieve members for
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getSiteMemberships
      responses:
        '200':
          description: Successful site memberships listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the site membership
                        userId:
                          type: string
                          format: uuid
                          description: ID of the user
                        siteId:
                          type: string
                          format: uuid
                          description: ID of the site
                        role:
                          type: string
                          enum:
                            - OWNER
                            - EDITOR
                            - VIEWER
                          description: Role of the user in the site
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the membership was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the membership was last updated
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the user
                            name:
                              type: string
                              description: Name of the user
                            email:
                              type: string
                              format: email
                              description: Email of the user
                          required:
                            - id
                            - email
                      required:
                        - id
                        - userId
                        - siteId
                        - role
                        - createdAt
                        - updatedAt
                        - user
                      description: Schema for a site membership entity
                    description: Array of memberships in the current page of results
                  total:
                    type: number
                    description: Total number of memberships matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful site memberships listing response
        '404':
          description: Site not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const siteMembershipListResponse of client.siteMemberships.list(
              '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            )) {
              console.log(siteMembershipListResponse.id);
            }
  /v1/site-memberships/{membershipId}:
    get:
      description: Retrieves details of a specific site membership
      summary: Get site membership
      tags: []
      parameters:
        - name: membershipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the membership to retrieve
      operationId: getSiteMembership
      responses:
        '200':
          description: Successful site membership retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  membership:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the site membership
                      userId:
                        type: string
                        format: uuid
                        description: ID of the user
                      siteId:
                        type: string
                        format: uuid
                        description: ID of the site
                      role:
                        type: string
                        enum:
                          - OWNER
                          - EDITOR
                          - VIEWER
                        description: Role of the user in the site
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the membership was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the membership was last updated
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Unique identifier for the user
                          name:
                            type: string
                            description: Name of the user
                          email:
                            type: string
                            format: email
                            description: Email of the user
                        required:
                          - id
                          - email
                    required:
                      - id
                      - userId
                      - siteId
                      - role
                      - createdAt
                      - updatedAt
                      - user
                    description: The requested site membership
                required:
                  - membership
                description: Successful site membership retrieval response
        '404':
          description: Site or membership not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Site or membership not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const siteMembership = await
            client.siteMemberships.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');


            console.log(siteMembership.membership);
    patch:
      description: Updates the role of an existing site membership
      summary: Update site membership
      tags: []
      parameters:
        - name: membershipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the membership to update
      operationId: updateSiteMembership
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum:
                    - OWNER
                    - EDITOR
                    - VIEWER
                  description: New role to assign to the user
              required:
                - role
              description: Data for updating a site membership
      responses:
        '200':
          description: Successful site membership update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the membership was updated successfully
                required:
                  - success
                description: Successful site membership update response
        '404':
          description: Membership not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Membership not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const siteMembership = await client.siteMemberships.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            {
              role: 'OWNER',
            });


            console.log(siteMembership.success);
    delete:
      description: Removes a user from a site
      summary: Delete site membership
      tags: []
      parameters:
        - name: membershipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the membership to delete
      operationId: deleteSiteMembership
      responses:
        '200':
          description: Successful site membership deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the membership was deleted successfully
                required:
                  - success
                description: Successful site membership deletion response
        '404':
          description: Membership not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Membership not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const siteMembership = await
            client.siteMemberships.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');


            console.log(siteMembership.success);
  /v1/webhooks:
    get:
      description: Retrieves a paginated list of webhooks with optional filtering
      summary: List webhooks
      tags: []
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getWebhooks
      responses:
        '200':
          description: Successful webhooks listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the webhook
                        userId:
                          type: string
                          description: User ID of the webhook
                        endpointUrl:
                          type: string
                          format: uri
                          description: URL of the webhook endpoint
                        secret:
                          type: string
                          description: Signing secret for the webhook
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the webhook was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the webhook was last updated
                        triggers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: Unique identifier for the trigger
                              webhookId:
                                type: string
                                format: uuid
                                description: ID of the parent webhook
                              eventType:
                                type: string
                                enum:
                                  - site_contact.created
                                  - form_response.created
                                  - booking.created
                                  - booking.cancelled
                                  - booking.rescheduled
                                  - order.created
                                description: Type of event that triggers this webhook
                              createdAt:
                                type: string
                                format: date-time
                                description: Date and time when the trigger was created
                              updatedAt:
                                type: string
                                format: date-time
                                description: Date and time when the trigger was last updated
                              inputData:
                                nullable: true
                                description: Additional input data for the trigger
                            required:
                              - id
                              - webhookId
                              - eventType
                              - createdAt
                              - updatedAt
                          description: Array of triggers associated with this webhook
                      required:
                        - id
                        - userId
                        - endpointUrl
                        - secret
                        - createdAt
                        - updatedAt
                        - triggers
                      description: Webhook schema including related triggers
                    description: Array of webhooks with relations in the current page of results
                  total:
                    type: number
                    description: Total number of webhooks matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful webhooks listing response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const webhookListResponse of client.webhooks.list()) {
              console.log(webhookListResponse.id);
            }
    post:
      description: Creates a new webhook subscription for receiving Webhook notifications
      summary: Create webhook
      tags: []
      parameters: []
      operationId: createWebhook
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                endpointUrl:
                  type: string
                  format: uri
                  description: URL that will receive webhook notifications
                triggers:
                  type: array
                  items:
                    discriminator:
                      propertyName: eventType
                    oneOf:
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - site_contact.created
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - form_response.created
                          inputData:
                            type: object
                            properties:
                              formTemplateSlug:
                                type: string
                                description: The slug of the form template
                            required:
                              - formTemplateSlug
                        required:
                          - eventType
                          - inputData
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - booking.created
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - booking.cancelled
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - booking.rescheduled
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - order.created
                          inputData: {}
                        required:
                          - eventType
                  minItems: 1
                  description: Triggers for this subscription
              required:
                - endpointUrl
                - triggers
              description: Data for creating a new webhook subscription
      responses:
        '201':
          description: Successful subscription creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the created subscription
                required:
                  - id
                description: Successful subscription creation response
        '400':
          description: Validation error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Validation error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const webhook = await client.webhooks.create({
              endpointUrl: 'https://example.com',
              triggers: [{ eventType: 'site_contact.created' }],
            });

            console.log(webhook.id);
  /v1/webhooks/{webhookId}:
    get:
      description: Retrieves a specific webhook by ID with its related triggers
      summary: Get webhook
      tags: []
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      operationId: getWebhook
      responses:
        '200':
          description: Successfully retrieved webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique identifier for the webhook
                  userId:
                    type: string
                    description: User ID of the webhook
                  endpointUrl:
                    type: string
                    format: uri
                    description: URL of the webhook endpoint
                  secret:
                    type: string
                    description: Signing secret for the webhook
                  createdAt:
                    type: string
                    format: date-time
                    description: Date and time when the webhook was created
                  updatedAt:
                    type: string
                    format: date-time
                    description: Date and time when the webhook was last updated
                  triggers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the trigger
                        webhookId:
                          type: string
                          format: uuid
                          description: ID of the parent webhook
                        eventType:
                          type: string
                          enum:
                            - site_contact.created
                            - form_response.created
                            - booking.created
                            - booking.cancelled
                            - booking.rescheduled
                            - order.created
                          description: Type of event that triggers this webhook
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the trigger was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the trigger was last updated
                        inputData:
                          nullable: true
                          description: Additional input data for the trigger
                      required:
                        - id
                        - webhookId
                        - eventType
                        - createdAt
                        - updatedAt
                    description: Array of triggers associated with this webhook
                required:
                  - id
                  - userId
                  - endpointUrl
                  - secret
                  - createdAt
                  - updatedAt
                  - triggers
                description: Successfully retrieved webhook
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Webhook not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Webhook not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const webhook = await client.webhooks.retrieve('webhookId');

            console.log(webhook.id);
    patch:
      description: Updates an existing webhook subscription
      summary: Update webhook
      tags: []
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      operationId: updateWebhook
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                endpointUrl:
                  type: string
                  format: uri
                  description: URL that will receive webhook notifications
                triggers:
                  type: array
                  items:
                    discriminator:
                      propertyName: eventType
                    oneOf:
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - site_contact.created
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - form_response.created
                          inputData:
                            type: object
                            properties:
                              formTemplateSlug:
                                type: string
                                description: The slug of the form template
                            required:
                              - formTemplateSlug
                        required:
                          - eventType
                          - inputData
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - booking.created
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - booking.cancelled
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - booking.rescheduled
                          inputData: {}
                        required:
                          - eventType
                      - type: object
                        properties:
                          eventType:
                            type: string
                            enum:
                              - order.created
                          inputData: {}
                        required:
                          - eventType
                  minItems: 1
                  description: Triggers for this subscription
              description: Data for updating a webhook subscription
      responses:
        '200':
          description: Successfully updated webhook
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique identifier for the webhook
                  userId:
                    type: string
                    description: User ID of the webhook
                  endpointUrl:
                    type: string
                    format: uri
                    description: URL of the webhook endpoint
                  secret:
                    type: string
                    description: Signing secret for the webhook
                  createdAt:
                    type: string
                    format: date-time
                    description: Date and time when the webhook was created
                  updatedAt:
                    type: string
                    format: date-time
                    description: Date and time when the webhook was last updated
                  triggers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the trigger
                        webhookId:
                          type: string
                          format: uuid
                          description: ID of the parent webhook
                        eventType:
                          type: string
                          enum:
                            - site_contact.created
                            - form_response.created
                            - booking.created
                            - booking.cancelled
                            - booking.rescheduled
                            - order.created
                          description: Type of event that triggers this webhook
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the trigger was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the trigger was last updated
                        inputData:
                          nullable: true
                          description: Additional input data for the trigger
                      required:
                        - id
                        - webhookId
                        - eventType
                        - createdAt
                        - updatedAt
                    description: Array of triggers associated with this webhook
                required:
                  - id
                  - userId
                  - endpointUrl
                  - secret
                  - createdAt
                  - updatedAt
                  - triggers
                description: Successfully updated webhook
        '400':
          description: Validation error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Validation error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
        '404':
          description: Webhook not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Webhook not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const webhook = await client.webhooks.update('webhookId');

            console.log(webhook.id);
    delete:
      description: Removes an existing webhook subscription
      summary: Delete webhook
      tags: []
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      operationId: deleteWebhook
      responses:
        '200':
          description: Successful subscription deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the deletion was successful
                required:
                  - success
                description: Successful subscription deletion response
        '400':
          description: Bad request error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Bad request error response
        '401':
          description: Unauthorized error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Unauthorized error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const webhook = await client.webhooks.delete('webhookId');

            console.log(webhook.success);
  /v1/workspaces/{workspaceId}:
    get:
      description: Retrieves a specific workspace and its related data by workspace ID
      summary: Get workspace
      tags: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace to retrieve
      operationId: getWorkspace
      responses:
        '200':
          description: Successful workspace retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspace:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the workspace
                      name:
                        type: string
                        description: Name of the workspace
                      slug:
                        type: string
                        description: URL-friendly identifier for the workspace
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the workspace was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the workspace was last updated
                      sites:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the site
                            name:
                              type: string
                              description: Name of the site
                            description:
                              type: string
                              description: Description of the site, can be null
                              nullable: true
                            slug:
                              type: string
                              description: URL-friendly identifier for the site
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the site was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the site was last updated
                            overridePlan:
                              type: string
                              description: Custom plan override for the site, can be null
                              nullable: true
                            status:
                              default: ENABLED
                              type: string
                              enum:
                                - EMPTY
                                - UNPUBLISHED
                                - PREVIEW
                                - SOFT_CLAIM
                                - ENABLED
                                - DEMO
                                - ARCHIVED
                              description: Current status of the site
                            locationId:
                              type: string
                              description: ID of the associated location, can be null
                              nullable: true
                            businessType:
                              type: string
                              description: Type of business the site represents, can be null
                              nullable: true
                            homePageId:
                              type: string
                              format: uuid
                              description: ID of the site's home page, can be null
                              nullable: true
                            timeZone:
                              type: string
                              description: Time zone for the site, can be null
                              nullable: true
                            workspaceId:
                              type: string
                              format: uuid
                              description: ID of the workspace this site belongs to, can be null
                              nullable: true
                            logoMedia:
                              nullable: true
                              description: Logo media for the site, can be null
                            socialIcons:
                              nullable: true
                              description: Social media icons configuration, can be null
                          required:
                            - id
                            - name
                            - description
                            - slug
                            - createdAt
                            - updatedAt
                            - overridePlan
                            - locationId
                            - businessType
                            - homePageId
                            - timeZone
                            - workspaceId
                          description: Schema for a site entity
                        description: Array of sites associated with this workspace
                    required:
                      - id
                      - name
                      - slug
                      - createdAt
                      - updatedAt
                      - sites
                    description: The requested workspace with all relations
                required:
                  - workspace
                description: Successful workspace retrieval response
        '404':
          description: Workspace not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Workspace not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const workspace = await client.workspaces.retrieve('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(workspace.workspace);
    patch:
      description: Updates an existing workspace with provided partial data
      summary: Update workspace
      tags: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace to update
      operationId: updateWorkspace
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the workspace
              description: Fields to update on the workspace
      responses:
        '200':
          description: Successful workspace update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspace:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the workspace
                      name:
                        type: string
                        description: Name of the workspace
                      slug:
                        type: string
                        description: URL-friendly identifier for the workspace
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the workspace was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the workspace was last updated
                      sites:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the site
                            name:
                              type: string
                              description: Name of the site
                            description:
                              type: string
                              description: Description of the site, can be null
                              nullable: true
                            slug:
                              type: string
                              description: URL-friendly identifier for the site
                            createdAt:
                              type: string
                              format: date-time
                              description: Date and time when the site was created
                            updatedAt:
                              type: string
                              format: date-time
                              description: Date and time when the site was last updated
                            overridePlan:
                              type: string
                              description: Custom plan override for the site, can be null
                              nullable: true
                            status:
                              default: ENABLED
                              type: string
                              enum:
                                - EMPTY
                                - UNPUBLISHED
                                - PREVIEW
                                - SOFT_CLAIM
                                - ENABLED
                                - DEMO
                                - ARCHIVED
                              description: Current status of the site
                            locationId:
                              type: string
                              description: ID of the associated location, can be null
                              nullable: true
                            businessType:
                              type: string
                              description: Type of business the site represents, can be null
                              nullable: true
                            homePageId:
                              type: string
                              format: uuid
                              description: ID of the site's home page, can be null
                              nullable: true
                            timeZone:
                              type: string
                              description: Time zone for the site, can be null
                              nullable: true
                            workspaceId:
                              type: string
                              format: uuid
                              description: ID of the workspace this site belongs to, can be null
                              nullable: true
                            logoMedia:
                              nullable: true
                              description: Logo media for the site, can be null
                            socialIcons:
                              nullable: true
                              description: Social media icons configuration, can be null
                          required:
                            - id
                            - name
                            - description
                            - slug
                            - createdAt
                            - updatedAt
                            - overridePlan
                            - locationId
                            - businessType
                            - homePageId
                            - timeZone
                            - workspaceId
                          description: Schema for a site entity
                        description: Array of sites associated with this workspace
                    required:
                      - id
                      - name
                      - slug
                      - createdAt
                      - updatedAt
                      - sites
                    description: The updated workspace with all relations
                required:
                  - workspace
                description: Successful workspace update response
        '404':
          description: Workspace not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Workspace not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const workspace = await client.workspaces.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');

            console.log(workspace.workspace);
  /v1/workspaces:
    get:
      description: Retrieves a paginated list of workspaces with optional filtering
      summary: List workspaces
      tags: []
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
        - name: sortBy
          in: query
          description: 'Field to sort by (default: updatedAt)'
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - name: sortDirection
          in: query
          description: 'Sort direction (default: desc)'
          schema:
            type: string
            enum:
              - asc
              - desc
      operationId: getWorkspaces
      responses:
        '200':
          description: Successful workspaces listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the workspace
                        name:
                          type: string
                          description: Name of the workspace
                        slug:
                          type: string
                          description: URL-friendly identifier for the workspace
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the workspace was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the workspace was last updated
                        sites:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: Unique identifier for the site
                              name:
                                type: string
                                description: Name of the site
                              description:
                                type: string
                                description: Description of the site, can be null
                                nullable: true
                              slug:
                                type: string
                                description: URL-friendly identifier for the site
                              createdAt:
                                type: string
                                format: date-time
                                description: Date and time when the site was created
                              updatedAt:
                                type: string
                                format: date-time
                                description: Date and time when the site was last updated
                              overridePlan:
                                type: string
                                description: Custom plan override for the site, can be null
                                nullable: true
                              status:
                                default: ENABLED
                                type: string
                                enum:
                                  - EMPTY
                                  - UNPUBLISHED
                                  - PREVIEW
                                  - SOFT_CLAIM
                                  - ENABLED
                                  - DEMO
                                  - ARCHIVED
                                description: Current status of the site
                              locationId:
                                type: string
                                description: ID of the associated location, can be null
                                nullable: true
                              businessType:
                                type: string
                                description: Type of business the site represents, can be null
                                nullable: true
                              homePageId:
                                type: string
                                format: uuid
                                description: ID of the site's home page, can be null
                                nullable: true
                              timeZone:
                                type: string
                                description: Time zone for the site, can be null
                                nullable: true
                              workspaceId:
                                type: string
                                format: uuid
                                description: ID of the workspace this site belongs to, can be null
                                nullable: true
                              logoMedia:
                                nullable: true
                                description: Logo media for the site, can be null
                              socialIcons:
                                nullable: true
                                description: Social media icons configuration, can be null
                            required:
                              - id
                              - name
                              - description
                              - slug
                              - createdAt
                              - updatedAt
                              - overridePlan
                              - locationId
                              - businessType
                              - homePageId
                              - timeZone
                              - workspaceId
                            description: Schema for a site entity
                          description: Array of sites associated with this workspace
                      required:
                        - id
                        - name
                        - slug
                        - createdAt
                        - updatedAt
                        - sites
                      description: Workspace schema including related sites
                    description: Array of workspaces in the current page of results
                  total:
                    type: number
                    description: Total number of workspaces matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful workspaces listing response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const workspaceListResponse of client.workspaces.list()) {
              console.log(workspaceListResponse.id);
            }
  /v1/workspaces/{workspaceId}/invitations:
    post:
      description: Creates a new invitation for a user to join a workspace
      summary: Create workspace invitation
      tags: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
          description: ID of the workspace to create an invitation for
      operationId: createWorkspaceInvitation
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email address of the user to invite
                role:
                  type: string
                  enum:
                    - OWNER
                    - MEMBER
                  description: Role to assign to the invited user
              required:
                - email
                - role
              description: Data for creating a workspace invitation
      responses:
        '201':
          description: Successful workspace invitation creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the invitation was created successfully
                  invitation:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the workspace invitation
                      userId:
                        type: string
                        format: uuid
                        description: ID of the invited user
                      email:
                        type: string
                        format: email
                        description: Email address of the invited user
                      role:
                        type: string
                        enum:
                          - OWNER
                          - MEMBER
                        description: Role assigned to the invited user
                      workspaceId:
                        type: string
                        format: uuid
                        description: ID of the workspace the user is invited to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was last updated
                      expiresAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation expires
                      accepted:
                        type: boolean
                        description: Whether the invitation has been accepted
                    required:
                      - id
                      - userId
                      - email
                      - role
                      - workspaceId
                      - createdAt
                      - updatedAt
                      - expiresAt
                      - accepted
                    description: The created workspace invitation
                required:
                  - success
                description: Successful workspace invitation creation response
        '400':
          description: Invalid input error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invalid input error response
        '404':
          description: Workspace not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Workspace not found error response
        '409':
          description: Invitation already exists error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invitation already exists error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const workspaceInvitation = await client.workspaceInvitations.create('workspaceId', {
              email: 'dev@stainless.com',
              role: 'OWNER',
            });

            console.log(workspaceInvitation.success);
    get:
      description: Retrieves a paginated list of invitations for a specific workspace
      summary: List workspace invitations
      tags: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace to retrieve invitations for
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getWorkspaceInvitations
      responses:
        '200':
          description: Successful workspace invitations listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the workspace invitation
                        userId:
                          type: string
                          format: uuid
                          description: ID of the invited user
                        email:
                          type: string
                          format: email
                          description: Email address of the invited user
                        role:
                          type: string
                          enum:
                            - OWNER
                            - MEMBER
                          description: Role assigned to the invited user
                        workspaceId:
                          type: string
                          format: uuid
                          description: ID of the workspace the user is invited to
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the invitation was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the invitation was last updated
                        expiresAt:
                          type: string
                          format: date-time
                          description: Date and time when the invitation expires
                        accepted:
                          type: boolean
                          description: Whether the invitation has been accepted
                      required:
                        - id
                        - userId
                        - email
                        - role
                        - workspaceId
                        - createdAt
                        - updatedAt
                        - expiresAt
                        - accepted
                      description: Schema for a workspace invitation entity
                    description: Array of invitations in the current page of results
                  total:
                    type: number
                    description: Total number of invitations matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful workspace invitations listing response
        '404':
          description: Workspace not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Workspace not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const workspaceInvitationListResponse of client.workspaceInvitations.list(
              '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            )) {
              console.log(workspaceInvitationListResponse.id);
            }
  /v1/workspace-invitations/{invitationId}:
    get:
      description: Retrieves details of a specific workspace invitation
      summary: Get workspace invitation
      tags: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the invitation to retrieve
      operationId: getWorkspaceInvitation
      responses:
        '200':
          description: Successful workspace invitation retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the workspace invitation
                      userId:
                        type: string
                        format: uuid
                        description: ID of the invited user
                      email:
                        type: string
                        format: email
                        description: Email address of the invited user
                      role:
                        type: string
                        enum:
                          - OWNER
                          - MEMBER
                        description: Role assigned to the invited user
                      workspaceId:
                        type: string
                        format: uuid
                        description: ID of the workspace the user is invited to
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation was last updated
                      expiresAt:
                        type: string
                        format: date-time
                        description: Date and time when the invitation expires
                      accepted:
                        type: boolean
                        description: Whether the invitation has been accepted
                    required:
                      - id
                      - userId
                      - email
                      - role
                      - workspaceId
                      - createdAt
                      - updatedAt
                      - expiresAt
                      - accepted
                    description: The requested workspace invitation
                  workspaceName:
                    type: string
                    description: Name of the workspace the invitation is for
                  workspaceId:
                    type: string
                    description: ID of the workspace the invitation is for
                required:
                  - invitation
                  - workspaceName
                  - workspaceId
                description: Successful workspace invitation retrieval response
        '404':
          description: Invitation not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invitation not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const workspaceInvitation = await client.workspaceInvitations.retrieve(
              '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            );

            console.log(workspaceInvitation.invitation);
    delete:
      description: Deletes an existing workspace invitation
      summary: Delete workspace invitation
      tags: []
      parameters:
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the invitation to delete
      operationId: deleteWorkspaceInvitation
      responses:
        '200':
          description: Successful workspace invitation deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the invitation was deleted successfully
                required:
                  - success
                description: Successful workspace invitation deletion response
        '404':
          description: Invitation not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invitation not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const workspaceInvitation = await
            client.workspaceInvitations.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');


            console.log(workspaceInvitation.success);
  /v1/workspaces/{workspaceId}/memberships:
    post:
      description: Adds a user to a workspace
      summary: Create workspace membership
      tags: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace to add the user to
      operationId: createWorkspaceMembership
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email address of the user to add
                role:
                  type: string
                  enum:
                    - OWNER
                    - MEMBER
                  description: Role to assign to the user
              required:
                - email
                - role
              description: Data for creating a workspace membership
      responses:
        '201':
          description: Successful workspace membership creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the membership was created successfully
                required:
                  - success
                description: Successful workspace membership creation response
        '400':
          description: Invalid input error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Invalid input error response
        '404':
          description: Workspace not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Workspace not found error response
        '409':
          description: User already a member error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: User already a member error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const workspaceMembership = await
            client.workspaceMemberships.create('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              email: 'dev@stainless.com',
              role: 'OWNER',
            });


            console.log(workspaceMembership.success);
    get:
      description: Retrieves a paginated list of members for a specific workspace
      summary: List workspace memberships
      tags: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace to retrieve members for
        - name: cursor
          in: query
          description: Pagination cursor
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Number of items per page (default: 10, max: 25)'
          schema:
            type: number
            nullable: true
      operationId: getWorkspaceMemberships
      responses:
        '200':
          description: Successful workspace memberships listing response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: Unique identifier for the workspace membership
                        userId:
                          type: string
                          format: uuid
                          description: ID of the user
                        workspaceId:
                          type: string
                          format: uuid
                          description: ID of the workspace
                        role:
                          type: string
                          enum:
                            - OWNER
                            - MEMBER
                          description: Role of the user in the workspace
                        createdAt:
                          type: string
                          format: date-time
                          description: Date and time when the membership was created
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date and time when the membership was last updated
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: Unique identifier for the user
                            name:
                              type: string
                              description: Name of the user
                            email:
                              type: string
                              format: email
                              description: Email of the user
                          required:
                            - id
                            - email
                      required:
                        - id
                        - userId
                        - workspaceId
                        - role
                        - createdAt
                        - updatedAt
                        - user
                      description: Schema for a workspace membership entity
                    description: Array of memberships in the current page of results
                  total:
                    type: number
                    description: Total number of memberships matching the query
                  pageInfo:
                    type: object
                    properties:
                      hasNextPage:
                        type: boolean
                        description: Indicates if there are more pages after the current one
                      hasPreviousPage:
                        type: boolean
                        description: Indicates if there are previous pages before the current one
                      startCursor:
                        type: string
                        description: Cursor pointing to the first item in the current page, if available
                      endCursor:
                        type: string
                        description: Cursor pointing to the last item in the current page, if available
                    required:
                      - hasNextPage
                      - hasPreviousPage
                    description: Pagination information
                required:
                  - items
                  - total
                  - pageInfo
                description: Successful workspace memberships listing response
        '404':
          description: Workspace not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Workspace not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            // Automatically fetches more pages as needed.
            for await (const workspaceMembershipListResponse of client.workspaceMemberships.list(
              '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            )) {
              console.log(workspaceMembershipListResponse.id);
            }
  /v1/workspace-memberships/{membershipId}:
    get:
      description: Retrieves details of a specific workspace membership
      summary: Get workspace membership
      tags: []
      parameters:
        - name: membershipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the membership
      operationId: getWorkspaceMembership
      responses:
        '200':
          description: Successful workspace membership retrieval response
          content:
            application/json:
              schema:
                type: object
                properties:
                  membership:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the workspace membership
                      userId:
                        type: string
                        format: uuid
                        description: ID of the user
                      workspaceId:
                        type: string
                        format: uuid
                        description: ID of the workspace
                      role:
                        type: string
                        enum:
                          - OWNER
                          - MEMBER
                        description: Role of the user in the workspace
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the membership was created
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the membership was last updated
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: Unique identifier for the user
                          name:
                            type: string
                            description: Name of the user
                          email:
                            type: string
                            format: email
                            description: Email of the user
                        required:
                          - id
                          - email
                    required:
                      - id
                      - userId
                      - workspaceId
                      - role
                      - createdAt
                      - updatedAt
                      - user
                    description: The requested workspace membership
                required:
                  - membership
                description: Successful workspace membership retrieval response
        '404':
          description: Membership not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Membership not found error response
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Fingertip from 'fingertip';

            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });

            const workspaceMembership = await client.workspaceMemberships.retrieve(
              '182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e',
            );

            console.log(workspaceMembership.membership);
    patch:
      description: Updates the role of an existing workspace membership
      summary: Update workspace membership
      tags: []
      parameters:
        - name: membershipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the membership to update
      operationId: updateWorkspaceMembership
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum:
                    - OWNER
                    - MEMBER
                  description: New role to assign to the user
              required:
                - role
              description: Data for updating a workspace membership
      responses:
        '200':
          description: Successful workspace membership update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the membership was updated successfully
                required:
                  - success
                description: Successful workspace membership update response
        '404':
          description: Membership not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Membership not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const workspaceMembership = await
            client.workspaceMemberships.update('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e', {
              role: 'OWNER',
            });


            console.log(workspaceMembership.success);
    delete:
      description: Removes a user from a workspace
      summary: Delete workspace membership
      tags: []
      parameters:
        - name: membershipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the membership to delete
      operationId: deleteWorkspaceMembership
      responses:
        '200':
          description: Successful workspace membership deletion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the membership was deleted successfully
                required:
                  - success
                description: Successful workspace membership deletion response
        '404':
          description: Membership not found error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - message
                description: Membership not found error response
      x-codeSamples:
        - lang: JavaScript
          source: >-
            import Fingertip from 'fingertip';


            const client = new Fingertip({
              apiKey: process.env['FINGERTIP_API_KEY'], // This is the default and can be omitted
            });


            const workspaceMembership = await
            client.workspaceMemberships.delete('182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e');


            console.log(workspaceMembership.success);
info:
  title: Fingertip Public API
  version: 1.0.0
servers:
  - url: https://api.fingertip.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
      description: Fingertip API authentication using Bearer token
security:
  - bearerAuth: []
